@using Resources;
@using VNCF.PSS.Web.Areas.Sales.Models;
@model Order_Head
@{
    ViewBag.Title = "Sales Order";
}
@section PageSpecificStyleSheetIncludes{
    <style>
        /* el-divider 修改高度實線效果,自動覆蓋原樣式 */
        .el-divider--horizontal {
            margin: 8px 0;
            background: 0 0;
            border-top: 0px solid #e8eaec;
        }
        /*避免el-select控件寬度與input控件寬度不一致 */
        .el-form .el-select {
            width: 100%;
        }
        /*只讀控件背景色,且文本居中*/
        .readonly-background .el-input__inner {
            width: 100%;
            background-color: #e8e8e8;
            text-align: center;
            border-color: #c0c4cc;
            color: #000;
        }
        /* 输入框或下拉选框禁用时字體顏色*/
        .el-select .el-input.is-disabled .el-input__inner{              
              color: #606266 !important;
          }
        /*用自定義的行高覆蓋原始行高*/
        .el-row{
	        margin-bottom: -18px;
	        display: flex;
	        flex-wrap: wrap
        }
        /*表頭高度*/
        /*.el-table__header tr,.el-table__header th {
            padding: 0;
            height: 10px;
        }        
        .el-table__body tr,.el-table__body td {
            padding: 0;
            height: 12px;
        }*/
        
        /*主檔圖片*/
        .div-right{
            /*float:right;            
            width:20%;*/
            position:absolute;
            width:120px;
            height:120px;
            position:absolute;            
            left:80%;
            top:40px;
            /*background-color:yellow;*/
        }
        .img-plan{
            border:thick;
            width:80%;
        }
        
        /*設置el-tabs頁面高度,内容超出高度可滚动*/
        .el-tabs--card {
          height: calc(100vh - 110px);
          /* overflow-y: auto; */
        }
        .el-tab-pane {
          height: calc(100vh - 110px);
          overflow-y: auto;
        } 
        /*模式窗口Title背景條*/
        .el-dialog__header{
            padding:12px 20px 10px;
            background-color: #f5f7fa;
        }        
        /* 用来设置当前页面element全局table 选中某行时的背景色*/
        .el-table__body tr.current-row>td{
            background-color: #87CEFA !important;
            color: #fff;
        }
        /*工具欄按鈕設置產色及邊框*/
        .tool-bar-color{
            padding: 2px;
            margin-top:5px;
            margin-left:2px;
            background-color: #F5F7FA;
            border:1px solid #e8e8e8;
        }
        /*.el-button {
          border-radius: 2px;
          padding: 0;
          margin-left: -25px;
          width: 100px;
          height: 30px;
          display: flex;
          justify-content: center;
          align-items: center;
          font-size:12px;
          background-color:#008FD4;
        }*/
    </style>
}

<div id="app">     
    <template> 
        <div class="tool-bar-color">
            <el-button type="primary" plain size="small" icon="el-icon-document-add" @@click="addHead" v-if="!(isEditModeHead)">@Resource.btn_new</el-button>
            <el-button type="danger" plain size="small" icon="el-icon-delete-solid" @@click="cancelHead" v-if="!(isEditModeHead)" style="margin-left: -2px;">@Resource.Delete</el-button>
            <el-button type="primary" plain size="small" icon="el-icon-edit" @@click="editHead" v-if="!(isEditModeHead)" style="margin-left: -2px;">@Resource.btn_edit</el-button>
            <el-button type="primary" plain size="small" icon="el-icon-s-grid" @@click="addItem" v-if="!(isEditModeHead)" style="margin-left: -2px;">@Resource.btn_additem</el-button>
            <el-button type="success" plain size="small" icon="el-icon-check" @@click="saveHead" v-if="isEditModeHead" style="margin-left: -2px;">@Resource.btn_save</el-button>
            <el-button type="warning" plain size="small" icon="el-icon-check" @@click="resetHead" v-if="isEditModeHead" style="margin-left: -2px;">@Resource.btn_undo</el-button>
            <el-button type="success" plain size="small" icon="el-icon-upload2" @@click="importHead" v-if="!(isEditModeHead)" style="margin-left: -2px;">@Resource.btn_import</el-button>
            <el-button type="warning" plain size="small" icon="el-icon-search" @@click="cancelItem" v-if="!(isEditModeHead)" style="margin-left: -2px;">@Resource.ItemCancel</el-button>
            <el-button type="primary" plain size="small" icon="el-icon-search" @@click="showSearch" v-if="!(isEditModeHead)">@Resource.btn_search</el-button>
            <el-button type="primary" plain size="small" icon="el-icon-printer" @@click="printPI" v-if="!(isEditModeHead)" style="margin-left: -2px;">@Resource.btn_print</el-button>
        </div>
    </template>

    <!--查找窗口-->
    <template v-if="isRenderSearchWindow">
        <el-dialog :title="title" :visible.sync="showDialogSearch" :close-on-click-modal="false" width="65%" destroy-on-close>
            <div class="tool-bar-color" style="margin-bottom:5px;margin-left:5px">
                <template>
                    <el-button type="danger" plain size="small" icon="el-icon-close" @@click="closeDialog('searchForm')">@Resource.btn_exit</el-button>
                    <el-button type="primary" plain size="small" icon="el-icon-search" @@click="searchData">@Resource.btn_search</el-button>
                    <el-button type="primary" plain size="small" icon="el-icon-check" @@click="afterSelectOK" >@Resource.btn_ok</el-button>
                    <el-button type="primary" plain size="small" icon="el-icon-refresh-left" @@click="clearSearch">重置</el-button>
                </template>
            </div>            
            <el-form :model="searchFormData" ref="searchForm" label-width="100px" size="mini">
                <el-row>
                    <el-col :span="8">
                        <el-form-item prop="OcID" label="@Resource.OcID"><el-input v-model="searchFormData.OcID"></el-input></el-form-item><!--OC編號-->
                    </el-col>
                    <el-col :span="8">
                        <el-form-item prop="OrderDate" label="@Resource.OrderDate">
                            <el-date-picker v-model="searchFormData.OrderDate" type="date" style="width:100%" ref="Order_Date" @@change="dateChange('Order_Date')"></el-date-picker>                        
                        </el-form-item><!--落單日期-->
                    </el-col>
                    <el-col :span="8">
                        <el-form-item prop="ReceivedDate" label="@Resource.ReceivedDate">
                            <el-date-picker v-model="searchFormData.ReceivedDate" type="date" style="width:100%" ref="Received_Date" @@change="dateChange('Received_Date')"></el-date-picker> 
                        </el-form-item><!--接單日期-->
                    </el-col>
                </el-row>
                <el-row>
                    <el-col :span="8">
                        <el-form-item prop="ForeignFirm" label="@Resource.ForeignFirm"><el-input v-model="searchFormData.ForeignFirm"></el-input></el-form-item><!--洋行編號-->
                    </el-col>
                    <el-col :span="8">
                        <el-form-item prop="Area" label="@Resource.Area"><el-input v-model="searchFormData.Area"></el-input></el-form-item><!--區域-->
                    </el-col>
                    <el-col :span="8">
                        <el-form-item prop="CustomerID" label="@Resource.CustomerID"><el-input v-model="searchFormData.CustomerID"></el-input></el-form-item><!--客戶編號-->
                    </el-col>
                </el-row>
                <el-row>
                    <el-col :span="8">
                        <el-form-item prop="SallerID" label="@Resource.SallerID"><el-input v-model="searchFormData.SallerID"></el-input></el-form-item><!--營業員-->
                    </el-col>
                    <el-col :span="8">
                        <el-form-item prop="Season" label="@Resource.Season"><el-input v-model="searchFormData.Season"></el-input></el-form-item><!--季度-->
                    </el-col>
                    <el-col :span="8">
                        <el-form-item prop="ContractID" label="@Resource.ContractID"><el-input v-model="searchFormData.ContractID"></el-input></el-form-item><!--PO/NO-->
                    </el-col>
                </el-row>
                <el-row>
                    <el-col :span="8">
                        <el-form-item prop="BrandID" label="@Resource.BrandID"><el-input v-model="searchFormData.BrandID"></el-input></el-form-item><!--牌子編號-->
                    </el-col>
                    <el-col :span="8">
                        <el-form-item prop="ProductMo" label="@Resource.ProductMo"><el-input v-model="searchFormData.ProductMo"></el-input></el-form-item><!--頁數-->
                    </el-col>
                    <el-col :span="8">
                        <el-form-item prop="ProductID" label="@Resource.ProductID"><el-input v-model="searchFormData.ProductID"></el-input></el-form-item><!--貨品編碼-->
                    </el-col>
                </el-row>
            </el-form>
            <template>
                <el-table :data="tableDataSearch"
                          height="300"
                          :header-cell-style="{background:'#F5F7FA',color:'#606266',height:'25px',padding:'2px'}"
                          :row-style="{height:'18px'}"
                          :cell-style="{padding:'0px'}"
                          border
                          highlight-current-row
                          stripe
                          style="font-size: 12px;width: 100%"                          
                          @*:default-sort="{prop:'RoleID',order:'descending'}"*@                         
                          v-loading="isLoading"
                          element-loading-background="rgba(255, 255, 255, .5)"
                          element-loading-text="加载中，请稍后..."
                          element-loading-spinner="el-icon-loading"
                          @@row-click="rowSearchClick"
                          @@row-dblclick="rowSearchDoubleClick"
                          >
                    <el-table-column prop="OcID" label="@Resource.OcID" width="130"></el-table-column>
                    <el-table-column prop="Ver" label="@Resource.Ver" width="50"></el-table-column>
                    <el-table-column prop="OrderDate" label="@Resource.OrderDate" width="100"></el-table-column>                    
                    <el-table-column prop="CustomerID" label="@Resource.CustomerID" width="90"></el-table-column>
                    <el-table-column prop="MoState" label="@Resource.State" width="50"></el-table-column>
                    <el-table-column prop="ProductMo" label="@Resource.ProductMo" width="100"></el-table-column>
                    <el-table-column prop="ProductID" label="@Resource.ProductID" width="150"></el-table-column>
                    <el-table-column prop="ProductCdesc" label="@Resource.ProductCdesc" width="150" :show-overflow-tooltip="true"></el-table-column>
                    <el-table-column prop="OrderQty" label="@Resource.OrderQty" width="90"></el-table-column>
                    <el-table-column prop="Price" label="@Resource.Price" width="100"></el-table-column>
                    <el-table-column prop="PriceUnit" label="@Resource.PriceUnit" width="80"></el-table-column>
                    <el-table-column prop="RateDiscount" label="@Resource.DiscountRate" width="90"></el-table-column>
                    <el-table-column prop="AmountDiscount" label="@Resource.Discount" width="90"></el-table-column>
                    <el-table-column prop="AmountProduct" label="@Resource.ProductAmount" width="100"></el-table-column>    
                </el-table>
            </template>
        </el-dialog>
    </template><!--查找窗口結束-->
   
     <!--查找貨品編碼-->
    <template v-if="isRenderFindItem">
        <el-dialog title="Find Item" :visible.sync="showDialogFindItem" :close-on-click-modal="false" width="60%" style="margin-top:0px;">
            <div style="margin-bottom:10px;margin-left:0px">
                <template>
                    <el-button type="danger" plain size="small" icon="el-icon-close" @@click="closeDialog('findItem')">@Resource.btn_exit</el-button>
                    <el-button type="primary" plain size="small" icon="el-icon-search" @@click="getFindItemData">@Resource.btn_search</el-button>
                    <el-button type="primary" plain size="small" icon="el-icon-check" @@click="rowFindItemDoubleClick">@Resource.btn_ok</el-button>                    
                </template>
            </div>
            <el-form :model="findItem" ref="findItem" label-width="100px" size="mini">
            <el-row>
                <el-col :span="12" style="width:45%">
                    <el-form-item label="@Resource.ProductID"><el-input v-model="findItem.ProductID"></el-input></el-form-item>
                </el-col>
            </el-row>
            <el-row>
                <el-col :span="12" style="width:60%">
                    <el-form-item label="@Resource.CodeType">
                        <template>
                            <el-radio-group v-model="findItem.type">
                                <el-radio :label="3">@Resource.FinshedProduct</el-radio><!--成品-->
                                <el-radio :label="0">@Resource.Made</el-radio><!--自制品-->
                                <el-radio :label="1">@Resource.Cosign</el-radio><!--委外加工-->
                                <el-radio :label="2">@Resource.Purcharse</el-radio><!--採購件-->
                            </el-radio-group>
                        </template>
                    </el-form-item>
                </el-col>
            </el-row>
            </el-form>
            <template>
                <el-table :data="tableDataFindItem"
                          height="350"
                          :header-cell-style="{background:'#F5F7FA',color:'#606266',height:'25px',padding:'2px'}"
                          :row-style="{height:'18px'}"
                          :cell-style="{padding:'0px'}"
                          border
                          highlight-current-row
                          stripe
                          style="font-size: 12px;width: 100%"
                          :default-sort="{prop:'ProductID',order:'ascending'}"
                          v-loading="isLoading"
                          element-loading-background="rgba(255, 255, 255, .5)"
                          element-loading-text="加载中，请稍后..."
                          element-loading-spinner="el-icon-loading"
                          @@row-click="rowFindItemClick"
                          @@row-dblclick="rowFindItemDoubleClick">
                    <el-table-column prop="ProductID" label="@Resource.ProductID" width="170"></el-table-column>
                    <el-table-column prop="ProductCdesc" label="@Resource.ProductCdesc" width="250" :show-overflow-tooltip="true"></el-table-column>
                    <el-table-column prop="ProductEdesc" label="@Resource.ProductEdesc" width="250" :show-overflow-tooltip="true"></el-table-column>
                    <el-table-column prop="Type" label="@Resource.CodeType" width="110">成品</el-table-column>
                </el-table>
            </template>
            <!--分頁全功能-->
            <div class="block">
                <el-pagination align="center"
                               background
                               @@size-change="handleSizeChange"
                               @@current-change="handleCurrentChange"
                               :current-page="tablePage.currentPage"
                               :page-sizes="[10, 20, 30, 40]"
                               :page-size="tablePage.pageSize"
                               layout="total, sizes, prev, pager, next, jumper"
                               :total="tablePage.totalResult">
                </el-pagination>
            </div> 
        </el-dialog>
    </template><!--end 查找貨品編碼-->
    
    <template>
        <!--el-tabs v-model="activeName" type="border-card" @@tab-click="handleClick" :height="autoHeight"-->
        <!--第一頁-->
        <!--el-tab-pane label="Resource.sales_order_master" name="first" size="mini" -->
        <el-form :model="formHeadData" ref="formHead" label-width="100px" size="mini" :rules="rulesHead">
            <el-row>
                <el-col :span="6" style="width:20%">
                    <el-form-item prop="OcID" label="@Resource.OcID">
                        <el-input v-model="formHeadData.OcID" style="width:65%" readonly ref="ocId"></el-input>
                        <el-input v-model="formHeadData.Ver" style="width:20%" readonly></el-input>
                    </el-form-item>
                </el-col>
                <el-col :span="6" style="width:20%">
                    <el-form-item prop="OrderDate" label="@Resource.OrderDate">
                        <el-date-picker v-model="formHeadData.OrderDate" type="date" style="width:100%" :readonly="isReadonly" ref="OrderDate" @@change="dateChange('OrderDate')">
                        </el-date-picker>
                    </el-form-item>
                </el-col>
                <el-col :span="6" style="width:20%">
                    <el-form-item prop="OrderType" label="@Resource.OrderType"><el-input v-model="formHeadData.OrderType" :readonly="isReadonly"></el-input></el-form-item>
                </el-col>
                <el-col :span="6" style="width:20%">
                    <!--接單日期-->
                    <el-form-item prop="ReceivedDate" label="@Resource.ReceivedDate">
                        <el-date-picker v-model="formHeadData.ReceivedDate" type="date" style="width:100%" :readonly="isReadonly" ref="ReceivedDate" @@change="dateChange('ReceivedDate')"></el-date-picker>
                    </el-form-item>
                </el-col>
            </el-row>
            <el-row>
                <el-col :span="6" style="width:20%">
                    <!--區域-->
                    <el-form-item prop="Area" label="@Resource.Area">
                        @*<el-input v-model="formHeadData.Area"></el-input>*@
                        <el-select v-model="formHeadData.Area" @@change="onAreaChange" :disabled="isDisableArea">
                            <el-option v-for="item in arrZone" :key="item.ID" :label="item.Name" :value="item.ID" />
                        </el-select>
                    </el-form-item>
                </el-col>
                <el-col :span="6" style="width:20%">
                    <!--洋行編號-->
                    <el-form-item prop="ForeignFirm" label="@Resource.ForeignFirm">
                        @*<el-input v-model="formHeadData.ForeignFirm"></el-input>*@
                        <el-select v-model="formHeadData.ForeignFirm" :disabled="isDisable">                           
                            <el-option v-for="item in arrForeignFirm" :key="item.ID" :label="item.ID" :value="item.ID"/>
                        </el-select>
                    </el-form-item>
                </el-col>
                
                <el-col :span="6" style="width:20%">
                    <!--客戶編號-->
                    <el-form-item prop="CustomerID" label="@Resource.CustomerID"><el-input v-model="formHeadData.CustomerID" @@blur="onCustomerIDBlur" :readonly="isReadonly"></el-input></el-form-item>
                </el-col>
                <el-col :span="6" style="width:20%">
                    <!--客戶名稱(中文)-->
                    <el-form-item prop="CustomerCdesc" label="@Resource.CustomerCdesc"> <el-input v-model="formHeadData.CustomerCdesc" :disabled="isDisable2"></el-input> </el-form-item>
                </el-col>
            </el-row>
            <el-row>
                <el-col :span="6" style="width:20%">
                    <!--客戶名稱(英文)-->
                    <el-form-item prop="CustomerEdesc" label="@Resource.CustomerEdesc"><el-input v-model="formHeadData.CustomerEdesc" :disabled="isDisable2"></el-input></el-form-item>
                </el-col>
                <el-col :span="6" style="width:20%">
                    <!--營業員-->
                    <el-form-item prop="SallerID" label="@Resource.SallerID">                        
                        <el-select v-model="formHeadData.SallerID" :disabled="isDisable">
                            <el-option v-for="item in arrSallerID" :key="item.ID" :label="item.Name" :value="item.ID" />   
                        </el-select>                        
                    </el-form-item>
                </el-col>
                <el-col :span="6" style="width:20%">
                    <!--季度-->
                    <el-form-item prop="Season" label="@Resource.Season">                        
                        <el-select v-model="formHeadData.Season" :disabled="isDisable">
                            <el-option v-for="item in arrSeason" :key="item.ID" :label="item.ID" :value="item.ID" />
                        </el-select>   
                    </el-form-item>
                </el-col>
                <el-col :span="6" style="width:20%">
                    <!--聯繫人-->
                    <el-form-item prop="Contacts" label="@Resource.Contacts"> <el-input v-model="formHeadData.Contacts" :readonly="isReadonly"></el-input> </el-form-item>
                </el-col>
            </el-row>
            <el-row>
                <el-col :span="6" style="width:20%">
                    <!--聯繫人電話-->
                    <el-form-item prop="ContactsTel" label="@Resource.ContactsTel"><el-input v-model="formHeadData.ContactsTel" :readonly="isReadonly"></el-input></el-form-item>
                </el-col>
                <el-col :span="6" style="width:20%">
                    <!--傳真-->
                    <el-form-item prop="ContactsFax" label="@Resource.ContactsFax"><el-input v-model="formHeadData.ContactsFax" :readonly="isReadonly"></el-input></el-form-item>
                </el-col>
                <el-col :span="6" style="width:20%">
                    <!--郵件-->
                    <el-form-item prop="ContactsEmail" label="@Resource.ContactsEmail"><el-input v-model="formHeadData.ContactsEmail" :readonly="isReadonly"></el-input></el-form-item>
                </el-col>
                <el-col :span="6" style="width:20%">
                    <!--跟單員-->
                    <el-form-item prop="Merchandisers" label="@Resource.Merchandisers">
                        <el-select v-model="formHeadData.Merchandisers" :disabled="isDisable">
                            <el-option v-for="item in arrMerchandisers" :key="item.ID" :label="item.Name" :value="item.ID" />
                        </el-select>
                    </el-form-item>
                </el-col>
            </el-row>
            <el-row>
                <el-col :span="6" style="width:20%">
                    <!--跟單員電話-->
                    <el-form-item prop="MerchandisersTel" label="@Resource.MerchandisersTel"><el-input v-model="formHeadData.MerchandisersTel" :readonly="isReadonly"></el-input></el-form-item>
                </el-col>
                <el-col :span="6" style="width:20%">
                    <!--跟單員郵件-->
                    <el-form-item prop="MerchandisersEmail" label="@Resource.MerchandisersEmail"><el-input v-model="formHeadData.MerchandisersEmail" :readonly="isReadonly"></el-input></el-form-item>
                </el-col>
                <el-col :span="6" style="width:20%">
                    <!--貨幣代號-->
                    <el-form-item prop="CurrencyID" label="@Resource.CurrencyID">
                        @*<el-input v-model="formHeadData.CurrencyID" style="width:50%"></el-input>*@
                        <el-select v-model="formHeadData.CurrencyID" @@change="onCurrencyIDChange" :disabled="isDisable">
                            <el-option v-for="item in arrMoney" :key="item.ID" :label="item.Name" :value="item.ID"/>
                        </el-select>
                    </el-form-item>
                </el-col>
                <el-col :span="6" style="width:20%">
                    <el-form-item prop="CurrencyRate" label="@Resource.CurrencyRate"><el-input v-model="formHeadData.CurrencyRate" readonly></el-input></el-form-item>
                </el-col>
            </el-row>
            <el-row>
                <el-col :span="6" style="width:20%">
                    <!--裝貨港口-->
                    <el-form-item prop="DeliveredPort" label="@Resource.DeliveredPort">              
                        <el-select v-model="formHeadData.DeliveredPort" :disabled="isDisable">
                            <el-option v-for="item in arrDeliveredPort" :key="item.ID" :label="item.Name" :value="item.ID" />
                        </el-select> 
                    </el-form-item>
                </el-col>
                <el-col :span="6" style="width:20%">
                    <!--目的港口-->
                    <el-form-item prop="DestinationPort" label="@Resource.DestinationPort">                       
                        <el-select v-model="formHeadData.DestinationPort" :disabled="isDisable">
                            <el-option v-for="item in arrDeliveredPort" :key="item.ID" :label="item.Name" :value="item.ID" />
                        </el-select> 
                    </el-form-item>
                </el-col>
                <el-col :span="6" style="width:20%">
                    <!--客戶PO-->
                    <el-form-item prop="PoNo" label="@Resource.PoNo">
                        <el-input v-model.trim="formHeadData.PoNo" @@blur="onToUpperCaseBlur($event,'PoNo',1)" :readonly="isReadonly"></el-input>
                    </el-form-item>
                    
                </el-col>
                <el-col :span="6" style="width:20%">
                    <!--付款方式-->
                    <el-form-item prop="PaymentType" label="@Resource.PaymentType">                       
                        <el-select v-model="formHeadData.PaymentType" :disabled="isDisable">
                            <el-option v-for="item in arrPaymentType" :key="item.ID" :label="item.Name" :value="item.ID" />
                        </el-select> 
                    </el-form-item>
                </el-col>                
            </el-row>
            <el-row>
                <el-col :span="6" style="width:20%">
                    <!--價格條件-->
                    <el-form-item prop="PriceType" label="@Resource.PriceType">                       
                        <el-select v-model="formHeadData.PriceType" :disabled="isDisable">
                            <el-option v-for="item in arrPriceType" :key="item.ID" :label="item.Name":value="item.ID"/>
                        </el-select>
                    </el-form-item>
                </el-col>
                <el-col :span="6" style="width:20%">
                    <!--裝運方式-->
                    <el-form-item prop="Transport" label="@Resource.Transport">
                        <el-select v-model="formHeadData.Transport" :disabled="isDisable">
                            <el-option v-for="item in arrTransport" :key="item.ID" :label="item.Name" :value="item.ID" />
                        </el-select>
                    </el-form-item>
                </el-col>
                <el-col :span="6" style="width:20%">
                    <!--折扣率%-->
                    <el-form-item prop="DiscountRate" label="@Resource.DiscountRate">
                        <el-input v-model="formHeadData.DiscountRate" onkeyup="this.value=this.value.replace(/[^\d]/g,'')" @@blur="onDiscountRateBlur" :readonly="isReadonly"></el-input>
                        @*@@change="checkDiscountRate"*@                        
                    </el-form-item>
                </el-col>
                <el-col :span="6" style="width:20%">
                    <!--折扣額-->
                    <el-form-item prop="Discount" label="@Resource.Discount"><el-input v-model="formHeadData.Discount" readonly></el-input></el-form-item>
                </el-col>                
            </el-row>
            <el-row>
                <el-col :span="6" style="width:20%">
                    <!--稅款編號-->
                    <el-form-item prop="TaxNo" label="@Resource.TaxNo"><el-input v-model="formHeadData.TaxNo" :readonly="isReadonly"></el-input></el-form-item>
                </el-col>
                <el-col :span="6" style="width:20%">
                    <!--稅款金額-->
                    <el-form-item prop="Tax" label="@Resource.Tax"><el-input v-model="formHeadData.Tax" readonly></el-input></el-form-item>
                </el-col>
                <el-col :span="6" style="width:20%">
                    <!--貨品金額-->
                    <el-form-item prop="ProductAmount" label="@Resource.ProductAmount"><el-input v-model="formHeadData.ProductAmount" readonly></el-input></el-form-item>
                </el-col>
                <el-col :span="6" style="width:20%">
                    <!--總金額-->
                    <el-form-item prop="TotalAmount" label="@Resource.TotalAmount"><el-input v-model="formHeadData.TotalAmount" readonly></el-input></el-form-item>
                </el-col>               
            </el-row>
            <el-row>
                <el-col :span="6" style="width:20%">
                    <!--銀行賬號-->
                    <el-form-item prop="BankAccount" label="@Resource.BankAccount">      
                        <el-select v-model="formHeadData.BankAccount" :disabled="isDisable">
                            <el-option v-for="item in arrBankAccount" :key="item.ID" :label="item.Name" :value="item.ID" />
                        </el-select>
                    </el-form-item>
                </el-col>
                <el-col :span="12" style="width:40%">
                    <!--備注-->
                    <el-form-item prop="Remark" label="@Resource.Remark"><el-input v-model="formHeadData.Remark" :readonly="isReadonly"></el-input></el-form-item>
                </el-col>                
                <el-col :span="6" style="width:20%">
                    <!--狀態-->
                    <el-form-item prop="State" label="@Resource.State">                        
                        <el-select v-model="formHeadData.State" :disabled="isDisable2">
                            <el-option v-for="item in arrState" :key="item.ID" :label="item.Name" :value="item.ID" />
                        </el-select>
                    </el-form-item> 
                </el-col>                
                            
            </el-row>
            <el-row>
                <el-col :span="6" style="width:20%">
                    <!--建檔人-->
                    <el-form-item prop="CreateBy" label="@Resource.CreateBy"><el-input v-model="formHeadData.CreateBy" readonly></el-input></el-form-item>
                </el-col>   
                <el-col :span="6" style="width:20%">
                    <!--建檔日期-->
                    <el-form-item prop="CreateAt" label="@Resource.CreateAt"><el-input v-model="formHeadData.CreateAt" readonly></el-input></el-form-item>
                </el-col>
                <el-col :span="6" style="width:20%">
                    <!--更改人-->
                    <el-form-item prop="UpdateBy" label="@Resource.UpdateBy"><el-input v-model="formHeadData.UpdateBy" readonly></el-input></el-form-item>
                </el-col>
                <el-col :span="6" style="width:20%">
                    <!--更改日期-->
                    <el-form-item prop="UpdateAt" label="@Resource.UpdateAt"><el-input v-model="formHeadData.UpdateAt" readonly></el-input></el-form-item>
                </el-col>
                @*<el-col ::span="6" style="width:20%">
                        <el-form-item prop="ActionType" label="隱藏字段"><el-input v-model="formHeadData.ActionType"></el-input></el-form-item>
                    </el-col>*@
            </el-row>

            <div class="div-right">
                <p>
                    <!--img id="ArtImage" class="plan-img" src="~/Images/photo.png" /-->
                    <img :src="this.ArtImageUrl" alt="..." class="img-plan">
                    @*<img src="~/Images/photo.png" alt="..." class="img-plan">*@
                </p>
            </div>
        </el-form>

        <!--/el-tab-pane-->
        <!--第二頁-->
        <!--el-tab-pane label="@Resource.sales_order_details" name="second"-->
        <!--公共彈窗 開始-->
        <template v-if="isRenderEditWindow">            
            <el-dialog :title="titleMap[dialogStatus]"
                        :visible.sync="showDialog"
                        :close-on-click-modal="false"
                        width="100%" 
                        :show-close="false">
                <el-form :model="formDetailData" ref="formDetail" :rules="rulesItem" label-width="110px" size="mini">
                    <el-row>                        
                        <!--0-->
                        <el-col :span="6" style="width:23%">                        
                            <el-form-item label="@Resource.Seq" prop="Seq"> <el-input v-model="formDetailData.Seq" :disabled="isDisable2"></el-input></el-form-item>
                        </el-col>
                        <el-col :span="6" style="width:21%">                       
                            <el-form-item label="@Resource.OcID" prop="OcID" v-if="false"> <el-input v-model="formDetailData.OcID"></el-input></el-form-item>
                        </el-col>
                        <el-col :span="6" style="width:20%">                       
                            <el-form-item label="@Resource.Ver" prop="Ver" v-if="false"> <el-input v-model="formDetailData.Ver"></el-input></el-form-item>
                        </el-col>
                    </el-row>
                    <el-row>
                        <!--1-->
                        <el-col :span="6" style="width:23%">
                            <!--制單類型-->
                            <el-form-item label="@Resource.MoType" prop="MoType">                            
                                <el-select v-model="formDetailData.MoType" @@change="onMoTypeChange" :disabled="isDisableMo">
                                    <el-option v-for="item in arrMoType" :key="item.ID" :label="item.Name" :value="item.ID"></el-option>
                                </el-select>
                            </el-form-item>
                        </el-col>
                        <el-col :span="6" style="width:21%">
                            <el-form-item label="做貨部門" prop="MoType">
                                <el-select v-model="formDetailData.MoDept" @@change="onMoDeptChange" :disabled="isDisableMo">
                                    <el-option v-for="item in arrMoDept" :key="item.ID" :label="item.Name" :value="item.ID"></el-option>
                                </el-select>
                            </el-form-item>
                        </el-col>
                        <el-col :span="6" style="width:20%">
                            <el-form-item label="組別" prop="MoGroup">                            
                                <el-select v-model="formDetailData.MoGroup" @@change="onMoGroupChange" :disabled="isDisableMo">
                                    <el-option v-for="item in arrMoGroup" :key="item.ID" :label="item.Name" :value="item.ID"></el-option>
                                </el-select>
                            </el-form-item>
                        </el-col>
                        <el-col :span="6" style="width:35%">
                            <el-form-item label="@Resource.ProductMo" prop="ProductMo">
                                <el-input v-model="formDetailData.ProductMo" style="width:50%" readonly></el-input>
                                <el-input v-model="formDetailData.ProductMoVer" style="width:28%" :disabled="isDisable2"></el-input>
                            </el-form-item>
                        </el-col>
                    </el-row>
                    <el-row>
                        <!--2-->
                        <el-col :span="6" style="width:23%">
                            <!--產品編號-->
                            <el-form-item label="@Resource.ProductID" prop="ProductID">
                                <el-input v-model="formDetailData.ProductID" 
                                            :readonly="isReadonly" 
                                            type="text" maxlength="14"
                                            onkeyup="this.value = this.value.toUpperCase()" >
                                    <el-button slot="append" icon="el-icon-search" @@click="openFindItem" v-if="isItemSave"></el-button>
                                </el-input>
                            </el-form-item>
                        </el-col>
                        <el-col :span="12" style="width:41%">
                            <!--產品描述-->
                            <el-form-item label="@Resource.ProductCdesc" prop="ProductCdesc"><el-input v-model="formDetailData.ProductCdesc" :readonly="isReadonly"></el-input></el-form-item>
                        </el-col>
                        <!--取色辦-->
                        <el-col :span="6" style="width:30%">
                            <el-form-item label="@Resource.GetColorSample" prop="GetColorSample"><el-input v-model="formDetailData.GetColorSample" :readonly="isReadonly"></el-input> </el-form-item>
                        </el-col>
                    </el-row>
                    <el-row>
                        <!--3-->
                        <el-col :span="6" style="width:23%">
                            <!--款號-->
                            <el-form-item label="@Resource.StyleNo" prop="StyleNo">
                                @*<el-input v-model="formDetailData.StyleNo" onkeyup="value=value.toUpperCase()":readonly="isReadonly"></el-input>*@ 
                                <el-input v-model="formDetailData.StyleNo" @@blur="onToUpperCaseBlur($event,'StyleNo',2)" :readonly="isReadonly"></el-input> 
                            </el-form-item>
                        </el-col>
                        <el-col :span="6" style="width:21%">
                            <!--牌子編號-->
                            <el-form-item label="@Resource.BrandID" prop="BrandID">
                                <el-input v-model="formDetailData.BrandID" @@blur="onBrandBlur" :readonly="isReadonly"></el-input> 
                                @*<el-select v-model="formDetailData.BrandID" :disabled="isDisable">
                                    <el-option v-for="item in arrBrand" :key="item.ID" :label="item.Name" :value="item.ID"></el-option>
                                </el-select>*@
                            </el-form-item>
                        </el-col>
                        <el-col :span="6" style="width:20%">
                            <!--客戶產品編號-->
                            <el-form-item label="@Resource.CustProductID" prop="CustProductID"> 
                                <el-input v-model="formDetailData.CustProductID" @@blur="onToUpperCaseBlur($event,'CustProductID',2)" :readonly="isReadonly"></el-input> 
                            </el-form-item>
                        </el-col>
                        <el-col :span="6" style="width:30%">
                            <!--客戶產品描述-->
                            <el-form-item label="@Resource.CustProductName" prop="CustProductName"> <el-input v-model="formDetailData.CustProductName" :readonly="isReadonly"></el-input> </el-form-item>
                        </el-col>
                    </el-row>
                    <el-row>
                        <!--4-->
                        <el-col :span="6" style="width:23%">
                            <!--客戶顏色編號-->
                            <el-form-item label="@Resource.CustColorID" prop="CustColorID"> 
                                <el-input v-model="formDetailData.CustColorID" @@blur="onToUpperCaseBlur($event,'CustColorID',2)" :readonly="isReadonly"></el-input> 
                            </el-form-item>
                        </el-col>
                        <el-col :span="6" style="width:21%">
                            <!--客戶顏色名稱-->
                            <el-form-item label="@Resource.CustColorName" prop="CustColorName"> <el-input v-model="formDetailData.CustColorName" :readonly="isReadonly"></el-input> </el-form-item>
                        </el-col>
                        <el-col :span="6" style="width:20%">
                            <!--客戶PO/NO-->
                            <el-form-item label="@Resource.ContractID" prop="ContractID">
                                <el-input v-model="formDetailData.ContractID" @@blur="onToUpperCaseBlur($event,'ContractID',2)" :readonly="isReadonly"></el-input> 
                            </el-form-item>
                        </el-col>
                        <el-col :span="6" style="width:30%">
                            <!--客戶Size-->
                            <el-form-item label="@Resource.CustSize" prop="CustSize">
                                <el-input v-model="formDetailData.CustSize" @@blur="onToUpperCaseBlur($event,'CustSize',2)" :readonly="isReadonly"></el-input> 
                            </el-form-item>
                        </el-col>
                    </el-row>
                    <el-row>
                        <!--5-->
                        <el-col :span="6" style="width:23%">
                            <!--訂單數量-->
                            <el-form-item label="@Resource.OrderQty" prop="OrderQty">
                                <el-input v-model.number="formDetailData.OrderQty" onkeyup="value=value.replace(/[^\d]/g,'')" @@blur="onOrderQtyBlur" :readonly="isReadonly"></el-input>      
                                @*<el-input v-model.number="formDetailData.OrderQty" @@keyup.native="proving" @@blur="onOrderQtyBlur" readonly="isReadonly"></el-input>*@                          
                            </el-form-item>
                        </el-col>
                        <el-col :span="6" style="width:21%">
                            <!--訂單單位-->
                            <el-form-item label="@Resource.OrderUnit" prop="OrderUnit">
                                <el-select v-model="formDetailData.OrderUnit" @@change="onOrderUnit" :disabled="isDisable">
                                    <el-option v-for="item in arrUnit" :key="item.ID" :label="item.Name" :value="item.ID"></el-option>
                                </el-select>
                            </el-form-item>
                        </el-col>
                        <el-col :span="6" style="width:20%">
                            <!--單價-->
                            <el-form-item label="@Resource.Price" prop="Price">
                                <el-input v-model="formDetailData.Price" @@change="checkPrice" @@blur="onPriceBlur" :readonly="isReadonly"></el-input> 
                            </el-form-item>
                        </el-col>
                        <el-col :span="6" style="width:30%">
                            <!--單價單位-->
                            <el-form-item label="@Resource.PriceUnit" prop="PriceUnit">                           
                                <el-select v-model="formDetailData.PriceUnit" @@change="onPriceUnit" :disabled="isDisable">
                                    <el-option v-for="item in arrUnit" :key="item.ID" :label="item.Name" :value="item.ID"></el-option>
                                </el-select>
                            </el-form-item>
                        </el-col>
                    </el-row>
                    <el-row>
                        <!--6-->                   
                        <el-col :span="6" style="width:23%">
                            <!--折扣率-->
                            <el-form-item label="@Resource.DiscountRate" prop="RateDiscount">
                                <el-input v-model="formDetailData.RateDiscount" onkeyup="value=value.replace(/[^\d]/g,'')" @@blur="onRateDiscountBlur" :readonly="isReadonly"></el-input>                            
                            </el-form-item>
                        </el-col>
                        <el-col :span="6" style="width:21%">
                            <!--折扣額-->
                            <el-form-item label="@Resource.Discount" prop="AmountDiscount">                            
                                <el-input v-model="formDetailData.AmountDiscount" :disabled="isDisable2"></el-input>
                            </el-form-item>
                        </el-col>
                        <el-col :span="6" style="width:20%">
                            <!--總金額-->
                            <el-form-item label="@Resource.ProductAmount" prop="AmountProduct"><el-input v-model="formDetailData.AmountProduct" :disabled="isDisable2"></el-input></el-form-item>
                        </el-col>
                        <el-col :span="6" style="width:30%">
                            <!--是否免費-->
                            <el-form-item prop="IsFree"><el-checkbox v-model="formDetailData.IsFree" @@change="onIsFreeChange" :disabled="isReadonly">@Resource.IsFree</el-checkbox></el-form-item>                        
                        </el-col>              
                    </el-row>
                    <el-row>
                        <!--7-->
                        <el-col :span="6" style="width:23%">
                            <!--預計完成日期-->
                            <el-form-item label="@Resource.PlanCompleteDate" prop="PlanCompleteDate">                            
                                <el-date-picker v-model="formDetailData.PlanCompleteDate" type="date" style="width:100%" ref="PlanCompleteDate" @@change="dateChange('PlanCompleteDate')" :readonly="isReadonly"></el-date-picker>
                            </el-form-item>
                        </el-col>
                        <el-col :span="6" style="width:21%">
                            <!--交貨日期-->
                            <el-form-item label="@Resource.ArriveDate" prop="ArriveDate">                            
                                <el-date-picker v-model="formDetailData.ArriveDate" type="date" style="width:100%" ref="ArriveDate" @@change="dateChange('ArriveDate')" :readonly="isReadonly"></el-date-picker>
                            </el-form-item>
                        </el-col>
                        <el-col :span="6" style="width:20%">
                            <!--交客日期-->
                            <el-form-item label="@Resource.FactoryShipOutDate" prop="FactoryShipOutDate">
                                <el-date-picker v-model="formDetailData.FactoryShipOutDate" type="date" style="width:100%" ref="FactoryShipOutDate" @@change="dateChange('FactoryShipOutDate')" :readonly="isReadonly"></el-date-picker>
                            </el-form-item>
                        </el-col>
                        <el-col :span="6" style="width:30%">
                            <!--是否列印-->
                            <el-form-item prop="IsPrint"><el-checkbox v-model="formDetailData.IsPrint" :disabled="isReadonly">@Resource.IsPrint</el-checkbox></el-form-item>
                        </el-col>
                    </el-row>
                    <el-row>
                        <!--8-->
                        <el-col :span="12" style="width:44%">
                            <!--OC備註-->
                            <el-form-item label="@Resource.OcRemark" prop="OcRemark"><el-input v-model="formDetailData.OcRemark" :readonly="isReadonly"></el-input> </el-form-item>
                        </el-col>
                        <el-col :span="12" style="width:50%">
                            <!--生產備註-->
                            <el-form-item label="@Resource.ProductRemark" prop="ProductRemark"><el-input v-model="formDetailData.ProductRemark" :readonly="isReadonly"></el-input> </el-form-item>
                        </el-col>
                    </el-row>
                    <el-row>                   
                        <el-col :span="12" style="width:44%">
                            <!--電鍍備註-->
                            <el-form-item label="@Resource.PlateRemark" prop="PlateRemark"><el-input v-model="formDetailData.PlateRemark" :readonly="isReadonly"></el-input> </el-form-item>
                        </el-col>
                        <el-col :span="12" style="width:50%">
                            <!--發票備註-->
                            <el-form-item label="@Resource.InvoiceRemark" prop="InvoiceRemark"><el-input v-model="formDetailData.InvoiceRemark" :readonly="isReadonly"></el-input> </el-form-item>
                        </el-col>
                    </el-row>
                    <el-row>
                        <el-col :span="12" style="width:44%">
                            <!--備註-->
                            <el-form-item label="@Resource.Remark" prop="Remarks"><el-input v-model="formDetailData.Remarks" :readonly="isReadonly"></el-input> </el-form-item>
                        </el-col>
                        <el-col :span="6" style="width:20%">
                            <!--頁數狀態-->
                            <el-form-item label="@Resource.MoState" prop="MoState">                            
                                <el-select v-model="formDetailData.MoState" :disabled="isDisable2">
                                    <el-option v-for="item in arrState" :key="item.ID" :label="item.Name" :value="item.ID"></el-option>
                                </el-select>
                            </el-form-item>
                        </el-col>
                        @*<el-col :span="6" style="width:30%">                        
                            <el-form-item label="ArtWork" prop="CustSize">
                                <el-input v-model="formDetailData.ArtImage" :readonly="isReadonly"></el-input>
                            </el-form-item>
                        </el-col>*@
                    </el-row>
                </el-form>
                <el-divider></el-divider>
                <div style="text-align: center">
                    <span slot="footer" class="dialog-footer">
                        <el-button type="primary" @@click="moveUp()" size="small" icon="el-icon-caret-left" v-if="isUpDown" plain>前</el-button>
                        <el-button type="primary" @@click="moveDown()" size="small" icon="el-icon-caret-right" v-if="isUpDown" plain>后</el-button>
                        <el-button type="success" @@click="saveItem()" size="small" icon="el-icon-check" v-if="isItemSave" plain>@Resource.btn_save</el-button>
                        <el-button type="warning" @@click="closeDialog('formDetail')" size="small" icon="el-icon-close" plain>@Resource.btn_exit</el-button>
                    </span>
                </div>                

            </el-dialog>
        </template><!--公共彈窗結束-->

        <!--表格-->
        <template>
            <el-table :data="tableData"                
                @*设置表头的背景色,字体颜色,行高*@
                :header-cell-style="{background:'#f5f7fa',color:'#606266',height:'25px',padding:'2px'}"
                :row-style="{height:'18px'}"
                :cell-style="{padding:'0px'}"
                border
                highlight-current-row
                stripe
                style="font-size: 12px;width: 100%"                
                @*:default-sort="{prop:'RoleID',order:'descending'}"*@
                @*隱藏表頭的第二行*@
                @*:header-cell-style="handerMethod"*@
                v-loading="isLoading"
                element-loading-background="rgba(255, 255, 255, .5)"
                element-loading-text="加载中，请稍后..."
                element-loading-spinner="el-icon-loading"
                @@row-click="rowDetailsClick"                     
                :row-class-name="tableRowClassName"
                ref="elTable">
                <el-table-column prop="OcID" label="@Resource.OcID" width="50" v-if="false"></el-table-column>
                <el-table-column prop="Ver" label="@Resource.Ver" width="50" v-if="false"></el-table-column>
                <el-table-column prop="Seq" label="@Resource.Seq" width="50" v-if="true"></el-table-column>                
                <el-table-column prop="MoType" label="@Resource.MoType" width="70" v-if="false"></el-table-column>
                <el-table-column prop="MoDept" label="做貨部門" width="70" v-if="false"></el-table-column>
                <el-table-column prop="MoGroup" label="組別" width="50" v-if="false"></el-table-column>
                <el-table-column prop="MoState" label="@Resource.State" width="60">
                    <template slot-scope="scope">                       
                        <span>{{formatStatus(scope.row.MoState)}}</span>
                    </template>
                </el-table-column>
                <el-table-column prop="ProductMo" label="@Resource.ProductMo" width="100"></el-table-column>
                <el-table-column prop="ProductMoVer" label="@Resource.Ver" width="50"></el-table-column>
                <el-table-column prop="ProductID" label="@Resource.ProductID" width="140"></el-table-column>
                <el-table-column prop="ProductCdesc" label="@Resource.ProductCdesc" width="150" :show-overflow-tooltip="true"></el-table-column>
                <el-table-column prop="BrandID" label="@Resource.BrandID" width="80"></el-table-column>
                <el-table-column prop="StyleNo" label="@Resource.StyleNo" width="80" :show-overflow-tooltip="true"></el-table-column>
                <el-table-column prop="CustProductID" label="@Resource.CustProductID" width="100" :show-overflow-tooltip="true"></el-table-column>
                <el-table-column prop="CustColorID" label="@Resource.CustColorID" width="100" :show-overflow-tooltip="true"></el-table-column>
                <el-table-column prop="ContractID" label="@Resource.ContractID" width="100" :show-overflow-tooltip="true"></el-table-column>
                <el-table-column prop="OrderQty" label="@Resource.OrderQty" width="80"></el-table-column>
                <el-table-column prop="OrderUnit" label="@Resource.OrderUnit" width="80"></el-table-column>
                <el-table-column prop="Price" label="@Resource.Price" width="90"></el-table-column>
                <el-table-column prop="PriceUnit" label="@Resource.PriceUnit" width="80"></el-table-column>
                <el-table-column prop="RateDiscount" label="@Resource.DiscountRate" width="80"></el-table-column>
                <el-table-column prop="AmountDiscount" label="@Resource.Discount" width="80"></el-table-column>
                <el-table-column prop="AmountProduct" label="@Resource.ProductAmount" width="80"></el-table-column>

                <el-table-column prop="GetColorSample" label="@Resource.GetColorSample" width="80"></el-table-column>
                <el-table-column prop="CustProductName" label="@Resource.CustProductName" width="100"></el-table-column>                
                <el-table-column prop="CustColorName" label="@Resource.CustColorName" width="100"></el-table-column>                
                <el-table-column prop="CustSize" label="@Resource.CustSize" width="80"></el-table-column>                
                <el-table-column prop="PlanCompleteDate" label="@Resource.PlanCompleteDate" width="100"></el-table-column>
                <el-table-column prop="ArriveDate" label="@Resource.ArriveDate" width="100"></el-table-column>
                <el-table-column prop="FactoryShipOutDate" label="@Resource.FactoryShipOutDate" width="100"></el-table-column>
                <el-table-column prop="Remarks" label="@Resource.Remark" width="120" :show-overflow-tooltip="true"></el-table-column>
                <el-table-column prop="OcRemark" label="@Resource.OcRemark" width="120" :show-overflow-tooltip="true"></el-table-column>
                <el-table-column prop="ProductRemark" label="@Resource.ProductRemark" width="120" :show-overflow-tooltip="true"></el-table-column>
                <el-table-column prop="PlateRemark" label="@Resource.PlateRemark" width="120" :show-overflow-tooltip="true"></el-table-column>
                <el-table-column prop="InvoiceRemark" label="@Resource.InvoiceRemark" width="120" :show-overflow-tooltip="true"></el-table-column>
                <el-table-column prop="ArtImage" label="ArtWork" width="120" v-if="false"></el-table-column>
                <el-table-column prop="IsFree" label="@Resource.IsFree" align="center" width="80">
                    <template slot-scope="scope">
                        <el-checkbox :checked="scope.row.IsFree == 1" disabled />                        
                    </template>
                </el-table-column>
                <el-table-column prop="IsPrint" label="@Resource.IsPrint" align="center" width="80">
                    <template slot-scope="scope">
                        <el-checkbox :checked="scope.row.IsPrint == 1" disabled />
                    </template>
                </el-table-column>

                <el-table-column width="50" align="center" fixed="right">
                    <template slot-scope="scope">
                        <el-button type="text" @@click="browseItem(scope.$index,scope.row)" size="mini">瀏覽</el-button>
                    </template>
                </el-table-column>
                <el-table-column width="50" label="操作" align="center" fixed="right">
                    <template slot-scope="scope">
                        <el-button type="text" @@click="editItem(scope.$index,scope.row)" size="mini">編輯</el-button>
                    </template>
                </el-table-column>
                <el-table-column width="50" fixed="right">
                    <template slot-scope="scope">
                        <el-button type="text" @@click="deleteItem(scope.$index,scope.row)" size="mini"><span style="color: red">刪除</span></el-button>
                    </template>
                </el-table-column>
            </el-table>

            <!--分頁全功能-->
            @*<div class="block">
                    <el-pagination align="center"
                                   background
                                   @@size-change="handleSizeChange"
                                   @@current-change="handleCurrentChange"
                                   current-page="tablePage.currentPage"
                                   page-sizes="[10, 20, 30, 40]"
                                   page-size="tablePage.pageSize"
                                   layout="total, sizes, prev, pager, next, jumper"
                                   total="tablePage.totalResult">
                    </el-pagination>
                </div>*@
        </template>
        <!--/el-tab-pane-->
        <!--/-el-tabs-->

        <el-divider></el-divider>
        
        <!--BOM-->
        <template>
            <el-table :data="tableDataBom"
                      :header-cell-style="{background:'#f5f7fa',color:'#606266',height:'25px',padding:'2px'}"
                      :row-style="{height:'18px'}"
                      :cell-style="{padding:'0px'}"
                      border
                      highlight-current-row
                      stripe
                      style="font-size: 12px;width: 100%"
                      :default-sort="{prop:'PrimaryKey',order:'descending'}"
                      v-loading="isLoading"
                      element-loading-background="rgba(255, 255, 255, .5)"
                      element-loading-text="加载中，请稍后..."
                      element-loading-spinner="el-icon-loading">
                <el-table-column prop="Seq" label="Seq" width="50" v-if="false"></el-table-column>
                <el-table-column prop="UpperSeq" label="UpperSeq" width="50" v-if="false"></el-table-column>
                <el-table-column prop="PrimaryKey" label="@Resource.PrimaryKey" width="50">
                    <template slot-scope="scope">
                        <el-checkbox :checked="scope.row.PrimaryKey == 1" disabled />
                    </template>
                </el-table-column>
                <el-table-column prop="ProductID" label="@Resource.ProductID" width="170"></el-table-column>
                <el-table-column prop="ProductCdesc" label="@Resource.ProductCdesc" width="250" :show-overflow-tooltip="true"></el-table-column>
                <el-table-column prop="Dosage" label="@Resource.Dosage" width="80"></el-table-column>
                <el-table-column prop="UnitCode" label="@Resource.UnitCode" width="80"></el-table-column>
                <el-table-column prop="Remark" label="@Resource.Remark" width="150" :show-overflow-tooltip="true"></el-table-column>
                <el-table-column prop="DoColor" label="@Resource.DoColor" width="120"></el-table-column>
                <el-table-column prop="ActualToHKQty" label="@Resource.ActualToHKQty" width="100"></el-table-column>
                <el-table-column prop="ActualToHKDate" label="@Resource.ActualToHKDate" width="120"></el-table-column>
            </el-table>
        </template>
        
    </template>


</div> 


@section PageSpecificJavascriptIncludes{
    <script src="~/Content/js/SalesOrder.js?v=20210416000016"></script>
    <script src="~/Content/js/common.js?v=20211108000001"></script>
    <script src="~/Content/js/BaseData.js?v=20211025000024"></script>

    <script>
        var vm = new Vue({
            el: "#app",
            data: {
                activeName: 'first',
                autoHeight: {
                    height: '800px'
                },
                isEditModeHead:false,
                showDialog:false,
                showDialogSearch:false,
                showDialogFindItem:false,
                isItemSave:true,
                isUpDown:false,
                isLoading:false,
                isDisable:true,
                isDisable2:true,
                isDisableArea:true,
                isDisableMo:true,
                isReadonly:true,
                isCancelItem:false,
                canAddItem:false,
                isRenderSearchWindow:false,//是否一開始就渲染窗體
                isRenderFindItem:false,
                isRenderEditWindow:false,
                //labelPosition: 'right',
                title:'查找',
                ArtImageUrl:'',
                searchFormData: {OcID:'',OrderDate:'',ReceivedDate:'',ForeignFirm:'',Area:'',CustomerID:'',SallerID:'',Season:'',ContractID:'',BrandID:'',ProductMo:'',ProductID:''},//查詢條件數據
                searchDataSelect:{OcID:'',Ver:'0'},                              
                formHeadData: {
                    OcID:'',Ver:0,OrderDate:'',CustomerID:'',CustomerCdesc:'',CustomerEdesc:'',CustomerAddress:'',SendAddress:'',CountryID:'',OrderType:'',ReceivedDate:'',
                    ForeignFirm:'',Area:'',SallerID:'',Season:'',Contacts:'',ContactsTel:'',ContactsFax:'',ContactsEmail:'',Merchandisers:'',MerchandisersTel:'',MerchandisersEmail:'',
                    CurrencyID:'',CurrencyRate:'',DeliveredPort:'',DestinationPort:'',PoNo:'',PaymentType:'',PriceType:'',Transport:'',DiscountRate:'',Discount:'',TaxNo:'',Tax:'',
                    ProductAmount:'',TotalAmount:'',BankAccount:'',State:'0',Remark:'',ShipMark:'',CreateBy:'',CreateAt:'',UpdateBy:'',UpdateAt:'',CustomerAddress:'',SendAddress:'',CountryID:''
                },
                tempHeadData:{},//用于新增/修改前備份當主檔的值
                tempTableData:[],//用于新增/修改前備份當明細表格的值
                tempDetailData:{},//新增,修改前備份當前行的值
                formDetailData:{},//新增,修改,瀏覽共用
                tableDataSearch: [],
                tableData: [],
                tableDataBom:[],  
                tableTempList: [],//臨時數組
                curRow:{},
                curRowIndex:-1,
                //定義分頁參數
                tablePage: {
                    currentPage: 1,
                    pageSize: 10,//每頁的數據條數
                    totalResult: 100
                },
                //新增和编辑弹框显示不同标题
                dialogStatus: "",
                titleMap: {
                    byAdd:"@Resource.btn_additem",
                    byEdit: "@Resource.btn_edititem",
                    byBrowse:"@Resource.btn_browse"
                },
                //初始化下拉列表框
                arrForeignFirm:[],
                arrZone:[],
                arrSallerID:[],
                arrSeason:[],
                arrMerchandisers:[],
                arrMoney:[],
                arrDeliveredPort:[],
                arrPaymentType:[],
                arrPriceType:[],
                arrTransport:[],
                arrBankAccount:[],
                arrState:[],
                arrMoType:[],
                arrMoDept:[],
                arrMoGroup:[],
                arrUnit:[],                
                findItem:{ProductID:'',type:3},               
                tableDataFindItem:[],
                FindItemCurrentRow:{ProductID:'',ProductDesc:''},
                deleteItemAmount:0.00,
                cancelItemAmount:0.00,
                //主表有效性檢查
                rulesHead: {
                    OcID:{ required: true, message: 'Oc編號不可為空!', trigger: 'change' },
                    Ver:{ required: true, message: '版本不可為空!', trigger: 'change' },  
                    OrderDate:{ required: true, message: '訂單日期不可為空!', trigger: 'change' },
                    Area:{ required: true, message: '區域不可為空!', trigger: 'change' },  
                    CustomerID:{ required: true, message: '客戶編號不可為空!', trigger: 'change' },                   
                    ForeignFirm:{ required: true, message: '洋行編號不可為空!', trigger: 'change' },                    
                    SallerID:{ required: true, message: '營業員編號不可為空!', trigger: 'change' },                    
                    Contacts:{ required: true, message: '聯系人不可為空!', trigger: 'change' },
                    Merchandisers:{ required: true, message: '跟單員不可為空!', trigger: 'change' }, 
                    CurrencyID:{ required: true, message: '貨幣不可為空!', trigger: 'change' },
                    PoNo:{ required: true, message: 'PoNo.不可為空!', trigger: 'change' }, 
                    PriceType:{ required: true, message: '價格條件不可為空!!', trigger: 'change' }                                                     
                },
                //明細有效性檢查
                rulesItem: {
                    OcID:{ required: true, message: 'Oc編號不可為空!', trigger: 'change' },                   
                    MoType:{ required: true, message: '制單類型不可為空!', trigger: 'change' },  
                    MoDept:{ required: true, message: '做貨部門不可為空!', trigger: 'change' },
                    MoGroup:{ required: true, message: '組別不可為空!', trigger: 'change' },
                    ProductMo:{ required: true, message: '頁數不可為空!', trigger: 'change' },  
                    ProductID:{ required: true, message: '產品編號不可為空!', trigger: 'change' },  
                    ProductCdesc:{ required: true, message: '產品描述不可為空!', trigger: 'change' }, 
                    OrderQty:{ required: true, message: '訂單數量必須大于0!', trigger: 'change',type:'number' }, 
                    OrderUnit:{ required: true, message: '訂單單位不可為空!', trigger: 'change' }, 
                    Price:{ required: true, message: '單價必須大于0!', trigger: 'change' },
                    PriceUnit:{ required: true, message: '單價單位不可為空!!', trigger: 'change' }, 
                    PlanCompleteDate:{ required: true, message: '預計完成日期不可為空!', trigger: 'change' },
                    ArriveDate:{ required: true, message: '交貨日期不可為空!', trigger: 'change' },
                    FactoryShipOutDate:{ required: true, message: '交客日期不可為空!', trigger: 'change' }
                }
            },
            computed : {
                //TODO              
            },
            created: function () {
                this.InIt();
            },
            watch : { 
                //TODO                
            },
            methods: {
                InIt(){
                    //洋行編號  
                    this.arrForeignFirm = BaseData.getBaseInfoByName('bs_customer');                    
                    //區域
                    this.arrZone = BaseData.getBaseInfo('bs_zone'); 
                    //營業員
                    this.arrSallerID = BaseData.getBaseInfo('bs_sales');                    
                    //季度
                    this.arrSeason = BaseData.getBaseInfoByName('bs_season');                    
                    //跟單員
                    this.arrMerchandisers = BaseData.getBaseInfo('bs_personnel');                    
                    //貨幣
                    this.arrMoney = BaseData.getBaseInfo('bs_money');                    
                    //裝貨港口/目的港口
                    this.arrDeliveredPort = BaseData.getBaseInfoByName('bs_port');                    
                    //附款方式
                    this.arrPaymentType = BaseData.getBaseInfo('bs_payment');                    
                    //價格條件
                    this.arrPriceType = BaseData.getBaseInfoByName('bs_payment_condition');
                    //運輸方式
                    this.arrTransport = BaseData.getBaseInfo('bs_shipping_mode');
                    //銀行賬號
                    this.arrBankAccount = BaseData.getBaseInfoByName('bs_company_accounts');
                    //狀態
                    this.arrState = BaseData.getBaseInfo('sy_bill_state');
                    //制單種類
                    this.arrMoType = BaseData.getBaseInfo('bs_type_1');
                    //做貨部門
                    this.arrMoDept = BaseData.getBaseInfo('bs_type_2');
                    //組別
                    this.arrMoGroup = BaseData.getBaseInfo('bs_type_3');
                    //數量單位/單價單位
                    this.arrUnit = BaseData.getBaseInfoByName('bs_unit');                    
                },                
                checkPrice(){
                    var price = this.formDetailData.Price;
                    var price = '' + (price===''?0.00:price);                    
                    price = price 
                        .replace(/[^\d.]/g, '') // 清除“数字”和“.”以外的字符 
                        .replace(/\.{2,}/g, '.') // 只保留第一个. 清除多余的 
                        .replace(/^\./g, '') //保证第一个为数字而不是. 
                        .replace('.', '$#$') 
                        .replace(/\./g, '') 
                        .replace('$#$', '.') 
                        .replace(/^(\-)*(\d+)\.(\d\d\d).*$/, '$1$2.$3'); //只能输入三位小数 
                    if (price.indexOf('.') < 0 && price != '') { 
                        //以上已经过滤,此处控制的是如果没有小数点,首位不能为类似于 01、02的金额 
                        price = parseFloat(price); 
                    }
                    this.formDetailData.Price = price;
                },   
                handleClick(tab, event) {
                    //console.log(tab, event);
                },
                showSearch() {
                    //顯示查詢窗體
                    this.isRenderSearchWindow = true;//渲染查詢窗口
                    this.showDialogSearch = true;
                    //重置表单数据
                    //this.$refs["searchForm"].resetFields();
                    this.tableDataSearch = [];
                },
                clearSearch(){
                    //重置
                    this.$refs["searchForm"].resetFields();
                },
                //不保存直接关闭弹框
                closeDialog(flag) {
                    //備用參數flag,此處傳入對應彈窗名稱引用
                    this.$refs[flag].resetFields();
                    if(flag =='searchForm'){
                        this.showDialogSearch = false;
                    }
                    if(flag=='formDetail'){
                        if(this.dialogStatus==="byEdit"){
                            //恢復修改前的值
                            this.formDetailData = JSON.parse(JSON.stringify(this.tempDetailData));
                            this.formHeadData = JSON.parse(JSON.stringify(this.tempHeadData));
                        }
                        if(this.dialogStatus==="byAdd"){
                            //恢復修改前的值
                            this.formHeadData = JSON.parse(JSON.stringify(this.tempHeadData));
                        } 
                        this.showDialog = false;
                    }
                    if(flag=='findItem'){
                        this.showDialogFindItem = false;
                    }
                    this.$emit("closeDialog", flag);
                },
                rowSearchClick(row, event, column){
                    //当点击任意一行时都会触发该事件
                    this.searchDataSelect.OcID = row.OcID;
                    this.searchDataSelect.Ver = row.Ver;                    
                },
                rowSearchDoubleClick(row){
                    this.afterSelectOK();
                },
                afterSelectOK(){
                    this.getDataHead();
                    this.showDialogSearch = false;
                },
                rowDetailsClick(row, event, column){
                    this.ArtImageUrl = row.ArtImage;//圖樣路徑
                    //$("#picture_name").attr("src", rows.ArtImage);//設置圖樣
                    this.curRow = row;//保存當前行
                    this.curRowIndex = row.index ;//保存當前行索引
                    var product_id = row.ProductID;                    
                    this.getBomData(product_id);//顯示BOM資料
                },
                searchData() {//查詢
                    this.isLoading = true;
                    //this.tableTempList = [];
                    var searchParams = {
                        OcID: this.searchFormData.OcID,
                        CustomerID: this.searchFormData.CustomerID,
                        OrderDate: this.searchFormData.OrderDate,
                        ReceivedDate: this.searchFormData.ReceivedDate,
                        ForeignFirm: this.searchFormData.ForeignFirm,
                        Area: this.searchFormData.Area,
                        SallerID: this.searchFormData.SallerID,
                        Season: this.searchFormData.Season,
                        ContractID: this.searchFormData.ContractID,
                        BrandID: this.searchFormData.BrandID,
                        ProductMo: this.searchFormData.ProductMo,
                        ProductID: this.searchFormData.ProductID
                    }
                    axios.get("GetOcHeadReturnList", { params: searchParams }).then(
                        (response) => {
                            this.tableTempList = [];
                            for (var i = 0; i < response.data.length; i++) {
                                this.tableTempList.push(response.data[i]);
                            }
                            //_self.goodsList.push({ goods_id:"",goods_cname:"" });
                            //this.fillData();
                            this.tableDataSearch = this.tableTempList;
                            this.isLoading = false;
                        },
                        (response) => {
                            alert(response.status);
                        }
                    ).catch(function (response) {
                        this.isLoading = false;
                        alert(response);
                    });
                },
                getDataHead() {
                    var searchParams = {OcID:this.searchDataSelect.OcID};
                    //查詢主表
                    axios.get("GetOcHead", { params: searchParams }).then(
                       (response) => {                           
                           this.formHeadData=JSON.parse(JSON.stringify(response.data));
                       },
                       (response) => {
                           alert(response.status);
                       }
                   ).catch(function (response) {
                       //this.isLoading = false;
                       alert(response);
                   });
                   //查詢明細
                   axios.get("List", { params: searchParams }).then(
                        (response) => {
                            this.tableTempList = [];
                            for (var i = 0; i < response.data.length; i++) {
                                this.tableTempList.push(response.data[i]);
                            }
                            //_self.goodsList.push({ goods_id:"",goods_cname:"" });
                            //this.fillData();
                            this.tableData = this.tableTempList;
                            this.isLoading = false;
                        },
                        (response) => {
                            alert(response.status);
                        }
                    ).catch(function (response) {
                        this.isLoading = false;
                        alert(response);
                    });
                },//end of getDataHead()

                //查詢BOM
                getBomData(product_id) {
                    this.isLoading = true;
                    axios.get("SalesBomList", { params: {ProductID: product_id} }).then(
                        (response) => {
                            this.tableTempList = [];
                            for (var i = 0; i < response.data.length; i++) {
                                this.tableTempList.push(response.data[i]);
                            }
                            this.tableDataBom = this.tableTempList;
                            this.isLoading = false;
                        },
                        (response) => {
                            alert(response.status);
                        }
                    ).catch(function (response) {
                        this.isLoading = false;
                        alert(response);
                    });
                },
                setToolBarStatus(blFlag){
                    this.isEditModeHead=blFlag;
                    this.isReadonly=!(blFlag);
                    this.isDisable=!(blFlag);                 
                },
                addHead() {
                    this.backupData();//編輯前首先暫存主檔/明細臨時數據
                    //清空數據
                    this.$refs["formHead"].resetFields();//清空所有對象值
                    this.tableData=[];//清空明細表格數據
                    this.tableDataBom=[];//清空BOM表格數據
                    //新增后初始化相關對象的初始值
                    //var now=new Date();
                    //var d=now.setDate(now.getDate());
                    var d = new Date();//生成日期對象:Fri Oct 15 2021 17:51:20 GMT+0800
                    d = comm.getDate(d,0);//轉成年月日字符串格式
                    this.$set(this.formHeadData, "OrderDate",d);
                    this.$set(this.formHeadData, "ReceivedDate",d);
                    this.$set(this.formHeadData, "Ver",0);
                    this.setToolBarStatus(true);
                    this.isDisableArea=false;
                    this.canAddItem = false;
                },
                editHead (){
                    //編輯主表
                    this.backupData();//編輯前首先暫存主檔/明細臨時數據
                    this.setToolBarStatus(true);                    
                    this.canAddItem=false;
                    this.isDisableArea=true;
                },
                saveHead (){
                    //儲存主表                   
                    this.$refs["formHead"].validate((valid) => {
                        if (valid) {                 
                            var updateParams = JSON.parse(JSON.stringify(this.formHeadData));
                            //console.log(updateParams);
                            axios.post("AddHead", updateParams ).then(
                                (response) => {                                                                     
                                    this.$message({
                                        message: "操作成功！",
                                        type: "success",
                                    }); 
                                    this.setToolBarStatus(false);
                                    this.canAddItem=true;
                                    this.isDisableArea=true;
                                 }
                            ).catch(function (response) {                                
                                this.$message({
                                    message: "保存主檔資料失敗!"+response,
                                    type: "error",
                                });  
                            });                                                       
                         } else {
                            this.$message({
                                message: "請檢查主檔資料的完整性",
                                type: "warning",
                            });  
                            return;
                         }
                    });                                    
                },
                resetHead (){
                    //恢復
                    this.setToolBarStatus(false);
                    this.formHeadData = JSON.parse(JSON.stringify(this.tempHeadData));//還原主表
                    this.tableData = JSON.parse(JSON.stringify(this.tempTableData));//還原明細
                    this.canAddItem = true;
                    this.isDisableArea = true;
                },
                backupData (){
                    this.tempHeadData = JSON.parse(JSON.stringify(this.formHeadData));//暫存主檔臨時數據
                    this.tempTableData = JSON.parse(JSON.stringify(this.tableData));//暫存明細臨時數據
                },
                cancelHead (){
                    //TODO注銷
                },
                importHead (){
                    //TODO 
                },
                printPI (){
                    //TODO
                    var url= "Print?ID=" + this.formHeadData.OcID;
                    showMessageDialog(url,'@Resource.btn_print',1024,768,true);
                },
                //新增明細
                addItem() {
                    if(this.formHeadData.OcID ==""){
                        this.$message({
                            showClose: true,
                            message: '主檔資料不可為空,當前操作無效!',
                            type: 'warning'
                        });   
                        return;
                    };
                    this.checkHeadDataStatus();    
                    if(this.canAddItem == false){
                        return;
                    }                     
                    this.dialogStatus = "byAdd";
                    this.tempHeadData = JSON.parse(JSON.stringify(this.formHeadData));//暫存臨時數據
                    // this.$refs["formDetail"].resetFields();//清空所有對象值
                    this.formDetailData = { OcID:this.formHeadData.OcID,Ver:this.formHeadData.Ver,Seq:'',MoType:'',MoDept:'',MoGroup:'',ProductMo:'',ProductMoVer:'0',ProductID:'',ProductCdesc:'',GetColorSample:'',
                        StyleNo:'',BrandID:'',CustProductID:'',CustProductName:'',CustColorID:'',CustColorName:'',ContractID:'',CustSize:'',OrderQty:0,OrderUnit:'PCS',Price:0.00,PriceUnit:'PCS',
                        RateDiscount:0,AmountDiscount:0.00, AmountProduct:0.00,IsFree:'0',PlanCompleteDate:'',ArriveDate:'',FactoryShipOutDate:'',IsPrint:'1',Remarks:'',OcRemark:'',ProductRemark:'',
                        PlateRemark:'',InvoiceRemark:'',MoState:'0',ArtImage:'',ActionType:'NEW'
                    };
                    var objDate = new Date();//生成日期對象:Fri Oct 15 2021 17:51:20 GMT+0800 
                    this.$set(this.formDetailData, "ArriveDate",comm.getDate(objDate,0));
                    this.$set(this.formDetailData, "FactoryShipOutDate",comm.getDate(objDate,3));
                    this.setCheckBoxStatus();                    
                    this.setFormEditButtonStatus(true);
                    this.isDisableMo = false;   
                },
                //編輯明細
                editItem(index,row) {
                    this.checkHeadDataStatus();
                    if(this.canAddItem == false){
                        return;
                    }  
                    this.dialogStatus = "byEdit";
                    this.tempHeadData = JSON.parse(JSON.stringify(this.formHeadData));//暫存臨時數據
                    this.curRow = row;
                    this.curRowIndex = index;                    
                    this.formDetailData = JSON.parse(JSON.stringify(row));
                    //Object.assign(this.formDetailData, row);
                    this.setCheckBoxStatus();//設置CheckBox狀態
                    this.tempDetailData = this.formDetailData;//暫存編輯前的值,以免修改后不保存直接關閉彈窗,值已改變的問題
                    this.formDetailData.ActionType ='EDIT';
                    this.setFormEditButtonStatus(true);                 
                    this.isDisableMo = true;
                },                
                browseItem(index,row){
                    this.checkHeadDataStatus();
                    if(this.canAddItem == false){
                        return;
                    }                    
                    this.dialogStatus ="byBrowse";
                    this.curRow = row;
                    this.curRowIndex = index;                    
                    this.formDetailData = JSON.parse(JSON.stringify(row));   
                    //Object.assign(this.formDetailData, row);
                    this.setCheckBoxStatus();//設置CheckBox狀態
                    this.isRenderEditWindow = true;
                    this.showDialog = true;
                    this.isItemSave = false;
                    this.isUpDown = true;
                    this.isReadonly = true;
                    this.isDisable = true;
                    this.isDisableMo = true;
                },                
                deleteItem(index,row){
                    this.checkHeadDataStatus();
                    if(this.canAddItem == false){
                        return;
                    }     
                    //TODO預留功能
                    //已轉生產計劃單的不允許刪除,只能注銷
                    //
                    this.$confirm('此操作將删除頁數:'+row.ProductMo +'的資料, 是否繼續?', '提示', {
                        confirmButtonText: '确定',
                        cancelButtonText: '取消',
                        type: 'warning'
                    }).then(() => {
                        axios.post("DeleteList", {OcID: row.OcID,Ver:row.Ver,Seq:row.Seq}).then(
                                (response) => {
                                    this.dialogStatus = "byDeleteItem";
                                    this.deleteItemAmount = row.AmountProduct;
                                    this.$message({message: "刪除操作成功！",type: "success"});
                                    if(row.IsFree =='0'){//判斷當前刪除的行是不是收費,0是收貨,1是免費
                                        this.getTotalAmount();//重計算主檔貨品金額,主檔貨品金額中要扣除掉                        
                                        //更新主檔總金額
                                        this.updateHeadAmount();                                      
                                    }
                                    this.dialogStatus = "";//清空刪除標識
                                }
                            ).catch(function (response) {
                                alert(response);
                            });
                        this.tableData.splice(index,1);
                    })
                },
                //頁數注銷
                cancelItem(){                     
                    if(!(this.curRow.index >= 0)){
                        this.$message({message: "請指定要注銷的頁數！",type: "error"});
                        return;
                    }
                    if(this.curRow.MoState =='2'){
                        this.$message({message: "當前頁數已是注銷狀態！",type: "error"});
                        return;
                    }                    
                    this.$confirm('此操作將註銷頁數:' + this.curRow.ProductMo +', 確定要進行此操作?', '提示', {
                        confirmButtonText: '确定',
                        cancelButtonText: '取消',
                        type: 'warning'
                    }).then(() => {
                        axios.post("CancelItem", {OcID:this.curRow.OcID, Ver:this.curRow.Ver, Seq:this.curRow.Seq}).then(
                                (response) => {
                                    this.$set(this.tableData[this.curRow.index],'MoState','2');//更新表格標識
                                    this.curRow.MoState='2';//設置當前行臨時行的注銷狀態
                                    this.isCancelItem = true;
                                    this.cancelItemAmount = this.curRow.AmountProduct;
                                    this.getTotalAmount();//重計算主檔總金額
                                    this.isCancelItem = false;
                                    this.cancelItemAmount = 0.00;
                                    this.updateHeadAmount(); //保存主檔總金額                                    
                                }
                            ).catch(function (response) {
                                alert(response);
                            });
                    })
                },
                setFormEditButtonStatus(blFlag){
                    this.isRenderEditWindow = true;//渲染開關
                    this.showDialog = blFlag;

                    this.isItemSave = blFlag;
                    this.isUpDown = !(blFlag);
                    this.isReadonly = !(blFlag);
                    this.isDisable = !(blFlag);                    
                },
                setCheckBoxStatus(){//設置CheckBox狀態
                    if(this.formDetailData.IsFree =='1'){
                        this.formDetailData.IsFree = true;
                    }else{
                        this.formDetailData.IsFree = false;
                    }
                    if(this.formDetailData.IsPrint =='1'){
                        this.formDetailData.IsPrint=true;
                    }else{
                        this.formDetailData.IsPrint=false;
                    }
                },
                checkHeadDataStatus(){
                    if(this.isEditModeHead == true){
                        this.$message({
                            showClose: true,
                            message: '當前操作無效,請首先保存主檔資料!',
                            type: 'warning'
                        });                        
                        this.canAddItem = false;
                    }else{
                        this.canAddItem = true;
                    }
                },
                saveItem(){ //保存明細                   
                    this.$refs["formDetail"].validate((valid) => {                       
                        if (valid) {
                            if(this.formDetailData.MoState =="2"){
                                this.$message.error('頁數為注銷狀態,當前操作無效!');                                
                                return;
                            }
                            if(this.formDetailData.IsFree == true) {
                                //this.formDetailData.IsFree = '1';
                                this.$set(this.formDetailData,'IsFree','1')
                            }else{
                                this.$set(this.formDetailData,'IsFree','0')
                                //this.formDetailData.IsFree = '0';
                            }
                            if(this.formDetailData.IsPrint == true) {                   
                                this.formDetailData.IsPrint = '1';
                            }else{
                                this.formDetailData.IsPrint='0';
                            }
                            var updateParams = JSON.parse(JSON.stringify(this.formDetailData));     
                            //axios.post("AddList?OcID=" + this.formDetailData.OcID, updateParams ).then(//2021.10.21 CANCEL
                            axios.post("AddList", updateParams ).then(
                                    (response) => {                                        
                                        this.showDialog = false;//關閉彈窗                                       
                                        //this.certinfoKey = !this.certinfoKey;
                                        //儲存主檔總金額  
                                        this.updateHeadAmount();
                                    }
                            ).catch(function (response) {
                                    alert(response);
                                });
                        } else {
                            alert('請返回檢查數據的完整性!');
                            return false;
                        }
                     });
                }, 
                //新增,修改,刪除明細時更新主檔中的貨品總金額
                updateHeadAmount(){
                    var updateHeadParams = JSON.parse(JSON.stringify(this.formHeadData));                                        
                    axios.post("UpdateHeadAmount", updateHeadParams ).then(
                        (response) => {                                                                                            
                            this.$message({
                                message: "操作成功！",
                                type: "success",
                            });                                                
                            this.searchDataSelect.OcID = this.formHeadData.OcID;
                            this.getDataHead();//重查刷新數據
                        }
                    ).catch(function (response) {                                
                        alert(response);
                    });
                },
                moveUp() {
                    var index = this.curRowIndex;                    
                    if(index > 0){
                        var temp = this.tableData[index-1];
                        this.curRowIndex = index-1;
                        this.moveCurrentRow(temp);                                         
                    } else {
                        this.curRowIndex = 0;
                        this.$message('已經是第一條記錄!');
                    }                    
                },
                moveDown() {
                    var index = this.curRowIndex;
                    if ((index+1) === this.tableData.length){
                        this.curRowIndex = index;
                        this.$message('已經是最后一條記錄!');                        
                    } else {                        
                        var temp = this.tableData[index+1];
                        this.curRowIndex = index+1;
                        this.moveCurrentRow(temp);
                    }                    
                },
                moveCurrentRow(objRow){
                    //跳轉至目的行
                    this.$refs.elTable.bodyWrapper.scrollTop = this.$refs.elTable.bodyWrapper.scrollHeight;
                    this.$refs.elTable.setCurrentRow(objRow);
                    //目的行轉為Json格式賦值給formDetailData變量
                    this.formDetailData =JSON.parse(JSON.stringify(objRow));
                    this.setCheckBoxStatus();
                },
                openFindItem(){
                    this.FindItemCurrentRow.ProductID = '';
                    this.isRenderFindItem = true;//開始渲染查找貨品編碼頁面
                    this.showDialogFindItem = true; 
                },
                getFindItemData() {//查詢
                    this.isLoading = true;             
                    var searchParams = {
                        ProductID: this.findItem.ProductID,
                        type: this.findItem.type
                        //type:3
                    };                    
                    axios.get("/SalesOrder/FindItemReturnList", { params: searchParams }).then(
                        (response) => {
                            this.tableTempList = [];
                            for (var i = 0; i < response.data.length; i++) {
                                this.tableTempList.push(response.data[i]);
                            }                            
                            this.fillData();
                            //this.tableDataFindItem = this.tableTempList;
                            //this.isLoading = false;
                        },
                        (response) => {
                            alert(response.status);
                        }
                    ).catch(function (response) {
                        this.isLoading = false;
                        alert(response);
                    });
                },                
                rowFindItemClick(row, event, column){
                    //当点击任意一行时都会触发该事件                  
                    this.FindItemCurrentRow.ProductID = row.ProductID;
                    this.FindItemCurrentRow.ProductCdesc = row.ProductCdesc;
                },
                rowFindItemDoubleClick(){
                    if(this.FindItemCurrentRow.ProductID !=''){                        
                        this.formDetailData.ProductID = this.FindItemCurrentRow.ProductID;   
                        this.formDetailData.ProductCdesc = this.FindItemCurrentRow.ProductCdesc;
                        this.showDialogFindItem = false;
                    }
                },
                handleCurrentChange: function (val) {
                    this.tablePage.currentPage = val;
                    this.fillData();
                },
                handleSizeChange(val) {
                    this.tablePage.pageSize = val;
                },
                fillData: function () {
                    this.tableDataFindItem = [];
                    this.tablePage.totalResult = this.tableTempList.length;
                    this.tableDataFindItem = this.tableTempList.slice((this.tablePage.currentPage - 1) * this.tablePage.pageSize, this.tablePage.currentPage * this.tablePage.pageSize);
                    this.isLoading = false;
                },
                onAreaChange(){
                    var area = this.formHeadData.Area;
                    if(area){                        
                        this.getMaxiId(area);
                    }
                },
                onCustomerIDBlur(){
                    if(this.isEditModeHead == false){                       
                        return;
                    }
                    var customerId = this.formHeadData.CustomerID;
                    if(customerId){
                        axios.get("/SalesOrder/GetCustomer?strCustomerID=" + customerId).then(
                           (response) => {                               
                               if(response.data['Id'] !=""){
                                   this.formHeadData.CustomerID = response.data['Id']; 
                                   this.formHeadData.CustomerCdesc = response.data['CustomerCdesc'];
                                   this.formHeadData.CustomerEdesc = response.data['CustomerEdesc']; 
                                   this.formHeadData.CustomerAddress = response.data['CustomerAddress']; 
                                   this.formHeadData.SendAddress = response.data['SendAddress']; 
                                   this.formHeadData.CountryID = response.data['CountryID'];
                                   this.formHeadData.Contacts = response.data['Contacts'];
                                   this.formHeadData.ContactsTel = response.data['ContactsTel'];
                                   this.formHeadData.ContactsFax = response.data['ContactsFax'];
                                   this.formHeadData.ContactsEmail = response.data['ContactsEmail'];
                                   this.formHeadData.CurrencyID = response.data['CurrencyID'];
                                   this.formHeadData.CurrencyRate = response.data['CurrencyRate'];
                               }else{
                                   alert("此客戶編碼不存在!");
                               }
                           }
                        );
                    }
                },
                onBrandBlur(){
                    var brand = this.formDetailData.BrandID;
                    if(brand.length>0){                        
                        axios.get("/BaseData/CheckBrand?strBrand=" + brand).then(
                           (response) => {
                               if(response.data.length>0){
                                   this.$set(this.formDetailData, "BrandID",response.data); 
                               }else{                                   
                                   this.$message('牌子編碼['+brand+']'+'不存在!');
                                   this.$set(this.formDetailData, "BrandID","");
                               }                                                             
                           }
                        );
                    }
                },
                onCurrencyIDChange(){
                    var currencyId = this.formHeadData.CurrencyID;
                    if(currencyId){
                        axios.get("/SalesOrder/GetCurrencyRate?strCurrencyID="+currencyId).then(
                           (response) => {                               
                               this.formHeadData.CurrencyRate=response.data;
                           }
                        );
                    }
                },
                onOrderQtyBlur(){                    
                    this.getAmountProduct();                   
                },
                onOrderUnit(){
                    //change 触发事件onOrderUnit(event, item)
                    this.getAmountProduct();
                },                            
                onPriceBlur(){
                    this.getAmountProduct();
                },
                onPriceUnit(){                    
                    this.getAmountProduct();
                },
                onRateDiscountBlur(){
                    this.getAmountProduct();
                },
                onDiscountRateBlur(){
                    if(this.isEditModeHead===false){                       
                        return;
                    }
                    //主算主表總金額
                    this.getTotalAmount();
                },         
                onToUpperCaseBlur(el,elName,dataType){
                    var val=el.target.value||''
                    val = val.toUpperCase();
                    el.target.value=val;
                    if(dataType==1){
                        this.$set(this.formHeadData, elName,val);                        
                    }else{
                        this.$set(this.formDetailData, elName,val);
                    }
                },
                //計算明細金額
                getAmountProduct(){
                    if(this.dialogStatus == "byBrowse"){
                        return;
                    }                    
                    //數量單位與單價單位相同直接相乘 RateDiscount,AmountDiscount
                    var order_qty = this.formDetailData.OrderQty;
                    order_qty = (order_qty==undefined || order_qty == "") ? 0 : order_qty;                    
                    var price = this.formDetailData.Price;
                    price = (price==undefined || price == "" || price<0) ? 0.00 : price;
                    var order_unit = this.formDetailData.OrderUnit;
                    var price_unit = this.formDetailData.PriceUnit;
                    var rate_price = 1;
                    var rate_order_qty = 1;
                    var amount_product = 0.00,Total_Amount=0.00;
                    var rate_discount = this.formDetailData.RateDiscount;
                    rate_discount = (rate_discount==undefined || rate_discount == "" ) ? 0 : rate_discount;
                    this.formDetailData.RateDiscount=rate_discount;                     
                    var amount_discount=0;
                    if(order_unit==price_unit){
                        amount_product = parseFloat(order_qty * price).toFixed(2);
                    }else{
                        //轉成與單價相同單位
                        amount_product = parseFloat((order_qty*so.getRate(order_unit)/so.getRate(price_unit)) * price).toFixed(2);
                    }                    
                                        
                    if(rate_discount>0){
                        amount_discount = parseFloat(amount_product * (rate_discount / 100)).toFixed(2);
                        amount_product = parseFloat(amount_product-amount_discount).toFixed(2);//parseFloat(amount_product*(1-rate_discount/100)).toFixed(2);                        
                    }else{
                        amount_discount = 0.00;
                        rate_discount = 0;
                    }                    
                    this.formDetailData.AmountDiscount = amount_discount;
                    this.formDetailData.AmountProduct = amount_product; 
                    //====以上為明細金額====                    
                    
                    //主表總金額,折扣額
                    var Product_Amount = 0.00;
                    var Disc_Amount = 0.00;
                    var Disc_Rate = this.formHeadData.DiscountRate; //主表折扣率 
                    Disc_Rate = (Disc_Rate==undefined || Disc_Rate=="") ? 0 : parseFloat(Disc_Rate);                    
                    //加總金額,但排除當前行(seq)
                    Product_Amount = so.getTotalAmountEdit(this.formHeadData.OcID, this.formHeadData.Ver, this.formDetailData.Seq);                    
                    Product_Amount = parseFloat(Product_Amount).toFixed(2);
                    
                    //加上當前行時需考慮是否免費                    
                    if ((this.formDetailData.IsFree == undefined) || (this.formDetailData.IsFree == false)) {
                        //即不打勾代表收費
                        Product_Amount = Number(Product_Amount) + Number(amount_product);//再加上當前值                       
                    }
                    if (Disc_Rate > 0) {
                        Disc_Amount = parseFloat(Product_Amount * (Disc_Rate / 100)).toFixed(2);
                        Total_Amount = Product_Amount - Disc_Amount;      
                    } else {
                        Disc_Amount = 0;
                    }
                    this.formHeadData.Discount = Disc_Amount;
                    this.formHeadData.ProductAmount = Product_Amount;
                    this.formHeadData.TotalAmount = Total_Amount;
                },                
                //更改主表匯率時計算總金額
                getTotalAmount(){
                    //主檔總金額,折扣額
                    var Product_Amount=0.00;
                    var Total_Amount=0.00;
                    var Disc_Amount = 0;
                    var Disc_Rate = this.formHeadData.DiscountRate;
                    Disc_Rate = (Disc_Rate==undefined || Disc_Rate=="") ? 0 : parseFloat(Disc_Rate);
                    //刪除明細中的頁數時,主檔總金額要扣除
                    if(this.dialogStatus =="byDeleteItem"){
                        this.formHeadData.ProductAmount = (this.formHeadData.ProductAmount - this.deleteItemAmount);                        
                    }
                    //注銷明細中的頁數時,主檔總金額要扣除
                    if(this.isCancelItem == true){
                        this.formHeadData.ProductAmount = (this.formHeadData.ProductAmount - this.cancelItemAmount);
                    }
                    Product_Amount = this.formHeadData.ProductAmount;
                    Product_Amount = (Product_Amount==undefined || Product_Amount=="") ? 0 : parseFloat(Product_Amount).toFixed(2);
                    if (Disc_Rate > 0) {
                        Disc_Amount = parseFloat(Product_Amount * (Disc_Rate / 100)).toFixed(2);
                        Total_Amount = Product_Amount - Disc_Amount;      
                    } else {
                        Disc_Amount = 0;
                        Total_Amount = Product_Amount;
                    }
                    this.formHeadData.Discount = Disc_Amount;
                    this.formHeadData.ProductAmount = Product_Amount;
                    this.formHeadData.TotalAmount = Total_Amount;
                },                
                //取最大單據編號
                getMaxiId(area){                   
                    axios.get("/SalesOrder/GetMaxOcID?strArea=" + area).then(
                       (response) => {
                           this.formHeadData.OcID = response.data;                           
                       }
                    );
                },
                //日期轉換
                dateChange(fieldDate){
                    var objDate = this.$refs[fieldDate].value;//生成日期對象:Fri Oct 15 2021 17:51:20 GMT+0800  
                    var strDate = comm.getDate(objDate,0);//轉成年月日字符串格式
                    switch (fieldDate) {
                        case "OrderDate": case "ReceivedDate":
                            this.$set(this.formHeadData, fieldDate,strDate);
                            if(fieldDate=='OrderDate'){
                                this.$set(this.formHeadData, 'ReceivedDate',strDate);
                            }
                            break;
                        case "ArriveDate": case "FactoryShipOutDate": case "PlanCompleteDate": //匹配多個值                    
                            this.$set(this.formDetailData, fieldDate,strDate);
                            if(fieldDate=='ArriveDate'){
                                this.$set(this.formDetailData, "FactoryShipOutDate",comm.getDate(objDate,3));
                            }
                            break;
                        case "Order_Date": case "Received_Date":
                            if(fieldDate=='Order_Date'){
                                this.$set(this.searchFormData, 'OrderDate',strDate);
                            }
                            if(fieldDate=='Received_Date'){
                                this.$set(this.searchFormData, 'ReceivedDate',strDate);
                            }
                            break;
                    }                   
                },
                onMoTypeChange(){                    
                    this.getMoSerialNo();
                },
                onMoDeptChange(){                   
                    this.getMoSerialNo();
                },
                onMoGroupChange(){                    
                    this.getMoSerialNo();
                },
                getMoSerialNo(){//生成頁數
                    var moType = this.formDetailData.MoType;  //当前combobox的值 
                    var moDept =  this.formDetailData.MoDept;
                    var moGroup = this.formDetailData.MoGroup;
                    if (moType > "" && moDept > "" && moGroup > "") {
                        var searchParams = { strMoType: moType, strMoDept: moDept, strMoGroup: moGroup };                                          
                        axios.get("GetMoSerialNo",{ params: searchParams }).then(
                            (response) => {
                                this.formDetailData.ProductMo=response.data;
                            },
                            (response) => {
                                alert(response.status);
                            }
                        ).catch(function (response) {
                            alert(response);
                        });
                    }
                },
                onIsFreeChange(){
                    this.getAmountProduct();//重計算主檔中的金額
                }, 
                // 状态过滤
                formatStatus(val) {                    
                    switch(val){
                        case '0':
                            return '未批準';
                            break;
                        case '1':
                            return '已批準';
                            break;
                        case '2':
                            return '已注銷';
                            break;
                        default:
                            return '未知';
                            break;  
                    }
                },                
                ////隐藏表头**********
                //handerMethod({rowIndex}){
                //    if (rowIndex === 1) {
                //        //这里为了是将第二列的表头隐藏，就形成了合并表头的效果
                //        return {display: 'none'};
                //    }
                //},
                //將行索引放進row
                tableRowClassName({row, rowIndex}){
                    row.index = rowIndex;
                    //alert(rowIndex);
                },
                //******************

            },//methods end

        })//new Vue end      
        

    </script>
}
