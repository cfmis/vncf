
@{
    ViewBag.Title = "生產流程";
}
@section PageSpecificStyleSheetIncludes{
    @*<link type="text/css" rel="stylesheet" href="~/Content/Hg/static/css/CFStyle.css?v=20201117102416261">*@
    <style type="text/css">
        .div-cont{
            float:left;
            width:80%;
            border:0px solid #F00;
        }
        .divcss5-cent{margin:0 auto;width:80%;height:80%;border:1px solid #F00}
        /*.div-left{
            float:left;
            width:80%;
            background-color:aqua;
        }
        .div-right{
            float:right;
            width:20%;
        }*/
        .div-none{
            float:none;
            width:20%;
            /*background-color:yellow;*/
        }
        .img-plan{
            border:thick;
            width:80%;
        }        
        .vxe-form-item{
            background-color:aqua;
        }
        
    </style>
}
<div id="app">
    <vxe-toolbar perfect size="medium" style="height:35px;" >
        <template #buttons>
            <vxe-button type="text" icon="fa fa-plus" content="新增" @@click="addNew()"></vxe-button>
            <vxe-button type="text" icon="fa fa-save" content="儲存" @@click="saveEvent()"></vxe-button>
            <vxe-button type="text" icon="fa fa-trash-o" content="删除"></vxe-button>
            @*<vxe-input v-model="searchProductMo" class="my-search" placeholder="輸入制單編號" style="height:30px;margin:105px,0px;">
                <template #suffix>
                    <i class="fa fa-search" @@click="searchByProductMo(searchProductMo)"></i>
                </template>
            </vxe-input>*@
            <vxe-input v-model="searchProductMo" placeholder="請輸入制單編號,點擊對應的功能" style="height:20px;margin-top:10px"></vxe-input>
            <vxe-button status="primary" icon="fa fa-search" @@click="searchByProductMo(searchProductMo)" style="height:25px;margin-top:10px">搜索</vxe-button>
            <vxe-button status="primary" icon="fa fa-copy" @@click="searchByProductMo(searchProductMo)" style="height:25px;margin-top:10px">從舊單</vxe-button>
            <vxe-button status="primary" icon="fa fa-copy" @@click="searchByProductMo(searchProductMo)" style="height:25px;margin-top:10px">從CFOC</vxe-button>
        </template>
    </vxe-toolbar>
    @*<p style="background-color:aqua;margin:0;">abc</p>*@
    @*<div style="height:40px;margin:0px;">*@
            <p style="height:25px;margin:0px;">
                <vxe-radio-group v-model="selectTab" style="height:20px;margin:0px;">
                    <vxe-radio-button label="tab1" content="生產主表"></vxe-radio-button>
                    <vxe-radio-button label="tab2" content="生產明細表"></vxe-radio-button>
                    @*<vxe-radio-button label="tab3" content="制單配件"></vxe-radio-button>*@
                    
                </vxe-radio-group>
            </p>
    @*</div>*@
    <div v-show="selectTab === 'tab1'" style="margin:15px 0px;">
        <div class="div-cont">
            <div class="div-left">
                <vxe-form :data="formData" @@submit="submitSearch" size="mini"  title-align="right" title-width="100px" prevent-submit title-colon custom-layout>@**@
                    <vxe-form-item title="制單編號" field="ProductMo" :item-render="{}" span="6" class="vxe-form-item-customize">
                        <template #default="{ data }">
                            <vxe-input v-model="data.ProductMo" placeholder="请输入制單編號" @@blur="productMoBlurEvent()" class="input-customize"></vxe-input>
                        </template>
                    </vxe-form-item>
                    <vxe-form-item title="計劃單日期" field="PlanDate" :item-render="{}" span="6" class="vxe-form-item-customize">
                        <template #default="{ data }">
                            <vxe-input v-model="data.PlanDate" placeholder="请输入計劃單日期" class="input-customize"></vxe-input>
                        </template>
                    </vxe-form-item>
                    <vxe-form-item title="版本號" field="Ver" :item-render="{}" span="6" class="vxe-form-item-customize">
                        <template #default="{ data }">
                            <vxe-input v-model="data.Ver" class="input-customize"></vxe-input>
                        </template>
                    </vxe-form-item>
                    <vxe-form-item title="客戶編號" field="CustomerID" :item-render="{}" span="6" class="vxe-form-item-customize">
                        <template #default="{ data }">
                            <vxe-input v-model="data.CustomerID" class="input-customize"></vxe-input>
                        </template>
                    </vxe-form-item>
                    <vxe-form-item title="訂單數量" field="OrderQty" :item-render="{}" span="6" class="vxe-form-item-customize">
                        <template #default="{ data }">
                            <vxe-input v-model="data.OrderQty" class="input-customize"></vxe-input>
                        </template>
                    </vxe-form-item>
                    <vxe-form-item title="數量單位" field="OrderUnit" :item-render="{}" span="6" class="vxe-form-item-customize">
                        <template #default="{ data }">
                            <vxe-input v-model="data.OrderUnit" class="input-customize"></vxe-input>
                        </template>
                    </vxe-form-item>
                    <vxe-form-item title="要求日期" field="RequestDate" :item-render="{}" span="6" class="vxe-form-item-customize">
                        <template #default="{ data }">
                            <vxe-input v-model="data.RequestDate" class="input-customize"></vxe-input>
                        </template>
                    </vxe-form-item>
                    <vxe-form-item title="交貨日期" field="DeliveryDate" :item-render="{}" span="6" class="vxe-form-item-customize">
                        <template #default="{ data }">
                            <vxe-input v-model="data.DeliveryDate" class="input-customize"></vxe-input>
                        </template>
                    </vxe-form-item>
                    <vxe-form-item title="產品備註" field="ProductRemark" :item-render="{}" span="12" class="vxe-form-item-customize">
                        <template #default="{ data }">
                            <vxe-input v-model="data.ProductRemark" class="input-customize"></vxe-input>
                        </template>
                    </vxe-form-item>
                    <vxe-form-item title="制單備註" field="MoRemark" :item-render="{}" span="12" class="vxe-form-item-customize">
                        <template #default="{ data }">
                            <vxe-input v-model="data.MoRemark" class="input-customize"></vxe-input>
                        </template>
                    </vxe-form-item>
                    <vxe-form-item title="計劃備註" field="PlanRemark" :item-render="{}" span="12" class="vxe-form-item-customize">
                        <template #default="{ data }">
                            <vxe-input v-model="data.PlanRemark" class="input-customize"></vxe-input>
                        </template>
                    </vxe-form-item>
                    <vxe-form-item title="開單人" field="CreateUser" :item-render="{}" span="6" class="vxe-form-item-customize">
                        <template #default="{ data }">
                            <vxe-input v-model="data.CreateUser" disabled class="input-customize"></vxe-input>
                        </template>
                    </vxe-form-item>
                    <vxe-form-item title="開單日期" field="CreateTime" :item-render="{}" span="6" class="vxe-form-item-customize">
                        <template #default="{ data }">
                            <vxe-input v-model="data.CreateTime" disabled class="input-customize"></vxe-input>
                        </template>
                    </vxe-form-item>
                    <vxe-form-item title="修改人" field="AmendUser" :item-render="{}" span="6" class="vxe-form-item-customize">
                        <template #default="{ data }">
                            <vxe-input v-model="data.AmendUser" disabled class="input-customize"></vxe-input>
                        </template>
                    </vxe-form-item>
                    <vxe-form-item title="修改日期" field="AmendTime" :item-render="{}" span="6" class="vxe-form-item-customize">
                        <template #default="{ data }">
                            <vxe-input v-model="data.AmendTime" disabled class="input-customize"></vxe-input>
                        </template>
                    </vxe-form-item>
                    <vxe-form-item title="批準人" field="ApprovedUser" :item-render="{}" span="6" class="vxe-form-item-customize">
                        <template #default="{ data }">
                            <vxe-input v-model="data.ApprovedUser" disabled class="input-customize"></vxe-input>
                        </template>
                    </vxe-form-item>
                    <vxe-form-item title="批準日期" field="ApprovedTime" :item-render="{}" span="6" class="vxe-form-item-customize">
                        <template #default="{ data }">
                            <vxe-input v-model="data.ApprovedTime" disabled class="input-customize"></vxe-input>
                        </template>
                    </vxe-form-item>
                    
                </vxe-form>
                @*<vxe-input v-model="value100" span="6" placeholder="默认尺寸"></vxe-input>
            <vxe-input v-model="value101" span="6" placeholder="中等尺寸" size="medium"></vxe-input>
            <vxe-input v-model="value102" span="6" placeholder="小型尺寸" size="small"></vxe-input>
            <vxe-input v-model="value103" span="6" placeholder="超小尺寸" size="mini"></vxe-input>*@
            </div>
            <div class="div-right">
                <p>
                    @*<img id="ArtImage" class="plan-img" src="~/Images/photo.png" />*@
                    <img :src="this.formData.ArtImageUrl" alt="..." class="img-plan">
                </p>
            </div>

        </div>
    </div>

    <div v-show="selectTab === 'tab2'" style="margin:15px 0px;">
        <vxe-toolbar style="height:35px">
            <template #buttons>
                <vxe-button icon="fa fa-plus" @@click="showInsertEvent()" size="mini">項目新增</vxe-button>
                <vxe-button icon="fa fa-trash-o" @@click="deleteEvent()" size="mini">項目刪除</vxe-button>
            </template>
        </vxe-toolbar>
        <vxe-table border
                   show-overflow
                   height="350"
                   size="mini"
                   highlight-current-row
                   :row-config="{height: 20}"
                   ref="xTable"
                   :loading="loading3"
                   :sync-resize="selectTab"
                   :checkbox-config="{highlight: true, range: true}"
                   :data="tablePlanDetails"
                   :keyboard-config="{isArrow: true}"
                   :edit-config="{trigger: 'click', mode: 'cell', icon: 'fa fa-pencil', showStatus: true}">
            <vxe-table-column type="seq" title="序號" width="60"></vxe-table-column>
            <vxe-table-column field="GoodsID" title="物料編號" width="200" :edit-render="{name: '$input', events: {blur: showMsg}}"></vxe-table-column>
            <vxe-table-column field="GoodsCname" title="物料描述" width="260"></vxe-table-column>
            <vxe-table-column field="WipID" title="負責部門" width="160"></vxe-table-column>
            <vxe-table-column field="NextWipID" title="收貨部門" width="160"></vxe-table-column>
            <vxe-table-column field="RequestQty" title="要求數量" width="160"></vxe-table-column>
            <vxe-table-column field="RequestDate" title="要求完成日期" width="160"></vxe-table-column>
            <vxe-table-column field="CompleteQty" title="完成數量" width="160"></vxe-table-column>
            <vxe-table-column field="CompleteDate" title="完成日期" width="160"></vxe-table-column>
            <vxe-table-column title="修改" width="60" :resizable="false" show-overflow>
                <template #default="{ row }">
                    <vxe-button type="text" icon="fa fa-edit" @@click="editRowEvent(row)"></vxe-button>
                </template>
            </vxe-table-column>
        </vxe-table>

        <vxe-modal ref="xModal" v-model="showEdit" title="编辑&保存" width="900" height="600" resize destroy-on-close>
            
                <template #default>
                    @*<div class="div-cont">*@
                        <vxe-form :data="editPlanDetails" title-align="right" title-width="100" @@submit="updateEvent">
                            <vxe-form-item title="物料編號" field="GoodsID" span="12" :item-render="{}">
                                <template #default="{ data }">
                                    <vxe-input v-model="data.GoodsID" class="input-customize" style="width:76%"></vxe-input>
                                    <vxe-button icon="fa fa-search" class="input-customize" style="height:20px;width:18%;" @@click="showGoods"></vxe-button>
                                </template>
                            </vxe-form-item>
                            <vxe-form-item title="物料描述" field="GoodsCname" span="12" :item-render="{name: 'input', attrs: {placeholder: '请输入昵称'}}"></vxe-form-item>
                            <vxe-form-item title="負責部門" field="WipID" span="12" :item-render="{name: '$select', options: wipList}"></vxe-form-item>
                            <vxe-form-item title="收貨部門" field="NextWipID" span="12" :item-render="{name: '$select', options: wipList}"></vxe-form-item>
                            <vxe-form-item title="要求數量" field="RequestQty" span="12" :item-render="{name: 'input', attrs: {type:'number',placeholder: '请输入數量'}}"></vxe-form-item>
                            <vxe-form-item title="要求完成日期" field="RequestDate" span="12" :item-render="{name: '$input',props: {type: 'date'}, attrs: {placeholder: '请输入要求日期'}}"></vxe-form-item>
                            <vxe-form-item align="center" span="24">
                                <template #default>
                                    <vxe-button v-if="selectRow" type="submit" status="primary">確定</vxe-button>
                                    <vxe-button v-else type="submit" status="primary">新增</vxe-button>
                                    @*<vxe-button type="reset">重置</vxe-button>*@
                                    <vxe-button @@click="$refs.xModal.close()">取消</vxe-button>
                                </template>
                            </vxe-form-item>
                        </vxe-form>
                    @*</div>*@
            </template>
            
        </vxe-modal>

        <vxe-modal ref="xModal1" v-model="showSearchGoods" title="查找" width="800" height="500" resize destroy-on-close>

            <template #default>
                @*<div class="div-cont">*@
                <vxe-form :data="searchGoodsDetails" title-align="right" title-width="100" @@submit="updateEvent">
                    <vxe-form-item title="物料編號" field="GoodsID" span="12" :item-render="{name: 'input', attrs: {placeholder: '请输入名称'}, events: {blur: getGoodsByID}}"></vxe-form-item>
                    <vxe-form-item align="center" span="24">
                        <template #default>
                            <vxe-button v-if="selectRow" type="submit" status="primary">確定</vxe-button>
                            <vxe-button v-else type="submit" status="primary">新增</vxe-button>
                            @*<vxe-button type="reset">重置</vxe-button>*@
                            <vxe-button @@click="$refs.xModal1.close()">取消</vxe-button>
                        </template>
                    </vxe-form-item>
                </vxe-form>
                @*</div>*@
            </template>

        </vxe-modal>


    </div>

    @*<div v-show="selectTab === 'tab3'">
        <vxe-table border
                   show-overflow
                   height="400"
                   :sync-resize="selectTab"
                   :data="tablePlanDetails">
            <vxe-table-column type="checkbox" width="60"></vxe-table-column>
            <vxe-table-column field="nickname" title="nickname"></vxe-table-column>
            <vxe-table-column field="sex" title="Sex"></vxe-table-column>
            <vxe-table-column field="age" title="Age"></vxe-table-column>
            <vxe-table-column field="date12" title="Date"></vxe-table-column>
            <vxe-table-column field="region" title="Region"></vxe-table-column>
            <vxe-table-column field="rate" title="Rate"></vxe-table-column>
        </vxe-table>
    </div>*@
</div>
@section PageSpecificJavascriptIncludes{
<script src="/Content/js/common.js"></script>
    <script type="text/javascript">

        var vm = new Vue({
            el: "#app",
            data: {
                selectTab: 'tab1',
                edit_mode: 0,
                showEdit: false,
                showSearchGoods:false,
                selectRow: null,
                tablePlanDetails: [],
                editPlanDetails: {},
                prevEditPlanDetails: {},
                searchGoodsDetails: { GoodsID :'',},
                searchProductMo: '',
                loading3: false,
                //ArtImageUrl: '/Images/photo.png',
                //formData: {
                //    ProductMo: '',
                //    PlanDate: '',
                //    Ver: 0,
                //    OrderQty: 0,
                //    OrderUnit: '',
                //    CustomerID: '',
                //    RequestDate: '',
                //    DeliveryDate: '',
                //    GoodsID: '',
                //    ProductRemark: '',
                //    MoRemark: '',
                //    PlanRemark: '',
                //    ApprovedTime: '',
                //    ApprovedUser: '',
                //    CreateUser: '',
                //    CreateTime: '',
                //    AmendUser: '',
                //    AmendTime:'',
                //},
                formData:{},
                prevForm: {},
                editFormChanged: false, // 是否修改标识
                sexList: [
                { label: '', value: '' },
                { label: '女', value: '0' },
                { label: '男', value: '1' }
                ],
                wipList:[],
                
                name: '',
                sex: 1,
                date:'',
            },
            created: function () {
                this.getWipID();
                //this.findList3();
            },
            methods: {
                showMsg() {
                    //if (this.name.length >= 9)
                    alert("ok");
                    //var vl = value;
                },
                showGoods(){
                    this.showSearchGoods = true;
                },
                addNew() {
                    this.edit_mode = 1;
                    nowDateTime = comm.getCurrentTime();
                    this.formData = {
                        EditFlag:1,
                        ProductMo: '',
                        PlanDate: comm.getCurrentDate(),
                        Ver: 0,
                        OrderQty: 0,
                        OrderUnit: '',
                        CustomerID: '',
                        RequestDate: '',
                        DeliveryDate: '',
                        GoodsID: '',
                        ProductRemark: '',
                        MoRemark: '',
                        PlanRemark: '',
                        ApprovedTime: nowDateTime,
                        ApprovedUser: '',
                        CreateUser: '',
                        CreateTime: nowDateTime,
                        AmendUser: '',
                        AmendTime: nowDateTime,
                        ArtImageUrl: '/Images/photo.png',
                    };
                    //深度複製一個對象，用來判斷數據是否有修改
                    this.prevForm = JSON.parse(JSON.stringify(this.formData));
                },
                productMoBlurEvent() {
                    if (this.formData.ProductMo == "")
                        return;
                    if (this.edit_mode == 1)
                        this.getPlanFromOrder();
                },
                searchByProductMo(_ProductMo) {
                    this.edit_mode = 0,
                    this.loading3 = true;
                    setTimeout(() => {
                        this.getPlanHead(_ProductMo);
                        this.getPlanDetails(_ProductMo);
                        this.loading3 = false;
                    }, 500);
                    
                },
                getPlanHead(_ProductMo) {
                    var _self = this;
                    //axios.get("GetGoodsDetails", { params: { goods_id: _id, } })//也可以將參數寫在這裡
                    axios.get("GetPlanHeadByMo", { params: { ProductMo: _ProductMo } }).then(
                    (response) => {
                        //this.formData.ProductMo = response.data.ProductMo,
                        //    this.formData.Ver = response.data.Ver,
                        //    this.formData.PlanDate = response.data.PlanDate,
                        //    this.formData.CustomerID = response.data.CustomerID,
                        //    this.formData.GoodsID = response.data.GoodsID,
                        //    this.formData.OrderQty = response.data.OrderQty,
                        //    this.formData.OrderUnit = response.data.OrderUnit,
                        //    this.formData.MoRemark = response.data.MoRemark,
                        //    this.formData.PlanRemark = response.data.PlanRemark,
                        //    this.formData.ProductRemark = response.data.ProductRemark
                        this.formData = {
                            ProductMo: response.data.ProductMo,
                            Ver: response.data.Ver,
                            PlanDate: response.data.PlanDate,
                            CustomerID: response.data.CustomerID,
                            GoodsID: response.data.GoodsID,
                            OrderQty: response.data.OrderQty,
                            OrderUnit: response.data.OrderUnit,
                            MoRemark: response.data.MoRemark,
                            PlanRemark: response.data.PlanRemark,
                            ProductRemark: response.data.ProductRemark,
                            ArtImageUrl: response.data.ArtImageUrl,
                            CreateUser: response.data.CreateUser,
                            CreateTime: response.data.CreateTime,
                            AmendUser: response.data.AmendUser,
                            AmendTime: response.data.AmendTime,
                        }
                        //深度複製一個對象，用來判斷數據是否有修改
                        this.prevForm = JSON.parse(JSON.stringify(this.formData));
                        //var ImagePath = "/art/artwork/" + "AAAA/A888020.bmp";
                        //this.ArtImageUrl = ImagePath;
                    },
                    (response) => {
                        alert(response.status);
                    }
                ).catch(function (response) {
                    alert(response);
                });
                },
                getPlanDetails(_ProductMo) {
                    var _self = this;
                    axios.get("GetPlanDetailsByMo", { params: { ProductMo: _ProductMo } }).then(
                    (response) => {
                        this.tablePlanDetails = response.data;
                    },
                    (response) => {
                        alert(response.status);
                    }
                ).catch(function (response) {
                    alert(response);
                });
                },
                getPlanFromOrder() {
                    var _self = this;
                    //axios.get("GetGoodsDetails", { params: { goods_id: _id, } })//也可以將參數寫在這裡
                    axios.get("GetOrderByMo", { params: { ProductMo: _self.formData.ProductMo } }).then(
                    (response) => {
                        this.formData.ProductMo = response.data[0].ProductMo,
                        this.formData.CustomerID = response.data[0].CustomerID,
                        this.formData.GoodsID = response.data[0].GoodsID,
                        this.formData.OrderQty = response.data[0].OrderQty,
                        this.formData.OrderUnit = response.data[0].OrderUnit,
                        this.formData.ProductRemark = response.data[0].ProductRemark,
                        this.formData.ArtImageUrl = response.data[0].ArtImageUrl,
                        this.tablePlanDetails = response.data
                    },
                    (response) => {
                        alert(response.status);
                    }
                ).catch(function (response) {
                    alert(response);
                });
                },
                submitSearch() {

                },
                showInsertEvent () {
                    this.editPlanDetails = {
                        EditFlag: 0,
                        ProductMo: this.formData.ProductMo,
                        Ver: this.formData.Ver,
                        GoodsID: '',
                        GoodsCname: '',
                        RequestQty: '',
                        RequestDate: '',
                        WipID: '',
                        NextWipID: ''
                    },
                   this.selectRow = null
                   this.showEdit = true

                },
                getWipID() {
                    var _self = this;///Base/BaseData///, { params: { ProductMo: this.editPlanDetails.GoodsID } }
                    axios.get("GetWipID").then(
                        (response) => {
                            this.wipList = response.data;
                        },
                        (response) => {
                            alert(response.status);
                        }
                    ).catch(function (response) {
                        alert(response);
                    });
                },
                updateEvent() {
                    //this.showEdit = false
                    //this.$XModal.message({ content: '保存成功', status: 'success' })
                    //Object.assign(this.selectRow, this.tablePlanDetails)
                    //return;
                    if (this.selectRow) {
                        this.showEdit = false
                        //this.$XModal.message({ content: '保存成功', status: 'success' })
                        for (let i in this.editPlanDetails) {
                            if (this.editPlanDetails[i] != this.prevEditPlanDetails[i]) {
                                this.editPlanDetails.EditFlag = 1;
                                break;
                            }
                        }
                        Object.assign(this.selectRow, this.editPlanDetails)
                    } else {
                        this.editPlanDetails.EditFlag = 1;
                        this.tablePlanDetails.push(this.editPlanDetails);
                        //this.editPlanDetails = {};
                        this.editPlanDetails = {
                            EditFlag: 0,
                            ProductMo: this.formData.ProductMo,
                            Ver:this.formData.Ver,
                            GoodsID: '',
                            GoodsCname: '',
                            RequestQty: '',
                            RequestDate: '',
                            WipID: '',
                            NextWipID: ''
                        };
                    }
                },
                getGoodsByID(){
                    if (this.editPlanDetails.GoodsID != "") {
                        var _self = this;
                        axios.get("GetGoodsByID", { params: { GoodsID: this.editPlanDetails.GoodsID } }).then(
                        (response) => {
                            this.editPlanDetails.GoodsCname = response.data.goods_cname
                        },
                        (response) => {
                            alert(response.status);
                        }
                    ).catch(function (response) {
                        alert(response);
                    });
                    }
                },
                editRowEvent (row) {
                    this.editPlanDetails = {
                        EditFlag: 0,
                        GoodsID: row.GoodsID,
                        GoodsCname: row.GoodsCname,
                        RequestQty: row.RequestQty,
                        RequestDate:row.RequestDate,
                        WipID: row.WipID,
                        NextWipID: row.NextWipID
                    }
                    //深度複製一個對象，用來判斷數據是否有修改
                    this.prevEditPlanDetails = JSON.parse(JSON.stringify(this.editPlanDetails));
                    this.selectRow = row
                    this.showEdit = true
                },
                saveEvent() {
                    this.validData();
                    var _self = this;
                    var PlanHead = _self.formData;
                    var PlanDetails = _self.tablePlanDetails;
                    axios.post("SavePlan", { PlanHead, PlanDetails }).then(
                    (response) => {
                        this.SavePlan = {
                            ProductMo: "",
                        };
                        alert("更新成功!");
                    },
                    (response) => {
                        alert(response.status);
                    }
                ).catch(function (response) {
                    alert(response);
                });
                },
                validData() {
                    for (let i in this.formData) {
                        if (this.formData[i] != this.prevForm[i]) {
                            this.formData.EditFlag = 1;
                            break;
                        }
                    }
                },
                deleteEvent() {
                    let selectRecords = this.$refs.xTable.getCheckboxRecords()
                    if (selectRecords.length) {
                        this.$refs.xTable.removeCheckboxRow()
                    } else {
                        alert('请至少选择一条数据！')
                        //this.$xDetails.message({ content: 'warning 提示框', status: 'warning' })
                    }
                },
            },
            
            watch: {
                //// watch监听 判断是否修改  
                //formData: {
                //    handler (val, oldVal) {
                //        for (let i in this.formData) {
                //            if (val[i] != this.prevForm[i]) {
                //                this.editFormChanged = true;
                //                break;
                //            } else {
                //                this.editFormChanged = false;
                //            }
                //        }
                //        console.log(this.editFormChanged);
                //    },
                //    deep: true
                //}

            }
        })
</script>
}